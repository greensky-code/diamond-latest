/* Copyright (c) 2020 . All Rights Reserved. */

export class DentalClaimDetail {
  seqClaimId: number;
  lineNumber: number;
  subLineCode: string;
  claimStatus: string;
  processingStatus: string;
  detailSvcDate: Date;
  svcToDate: Date;
  seqProvId: number;
  seqMembId: number;
  billedProcedure: string;
  billedModifier: string;
  billedAllowedAmt: number;
  procedureCode: string;
  quantity: number;
  toothNumber: string;
  toothSurface1: string;
  toothSurface2: string;
  toothSurface3: string;
  toothSurface4: string;
  toothSurface5: string;
  arch: string;
  quadrant: string;
  oralCavity: string;
  typeOfService: string;
  toothStatus: string;
  seqCerulId: number;
  billedAmt: number;
  allowedFactor: number;
  allowedAmt: number;
  allowedReason: string;
  notCoveredAmt: number;
  notCoveredReason: string;
  copayAmt: number;
  copayReason: string;
  coinsAmt: number;
  coinsReason: string;
  deductibleAmt: number;
  deductibleReason: string;
  otherCarrierAmt: number;
  otherCarrierReason: string;
  withholdAmt: number;
  netAmt: number;
  adjustmentReason: string;
  adjudicationMethod: string;
  medDefCode: string;
  postDate: Date;
  checkDate: Date;
  companyCode: string;
  glRefCode: string;
  printFlag: string;
  eobId: string;
  raId: string;
  seqApTrans: number;
  seqAuthDetail: number;
  hiddenUserDef1: string;
  hiddenUserDef2: number;
  anesTotalTime: number;
  diagCodePointer1: string;
  diagCodePointer2: string;
  diagCodePointer3: string;
  diagCodePointer4: string;
  diagCodePointer5: string;
  diagCodePointer6: string;
  diagCodePointer7: string;
  diagCodePointer8: string;
  primaryPaidAmt: number;
  ocAllowedAmt: number;
  fullCvrgAmt: number;
  cobPatLiabCvrgAmt: number;
  adjudDate: Date;
  placeOfService: string;
  reservedLocalUseDet: string;
  auditStatus: string;
  printFlagChangeInd: string;
  bmaAmount: number;
  bmaReason: string;
  withholdSurplus: number;
  interestAmt: number;
  discountAmt: number;
  interestInquiryDate: Date;
  interestResetDate: Date;
  uncleanFlag: string;
  uncleanDays: number;
  deductUncleanDays: number;
  paidNetAmt: number;
  intDscntAdjReason: string;
  seqIntDsctRuleId: number;
  securityCode: string;
  insertDatetime: Date;
  insertUser: string;
  insertProcess: string;
  updateDatetime: Date;
  updateUser: string;
  updateProcess: string;
  seqTfrulId: number;
  geoZipRegion: string;
  penaltyAmt: number;
  intPenDscRsn: string;
  penUncleanDays: number;
  evalForAdminFee: string;
  adminFeeExists: string;
  seqMcondId: number;
}