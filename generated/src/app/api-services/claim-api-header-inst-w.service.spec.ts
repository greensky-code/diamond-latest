/* Copyright (c) 2020 . All Rights Reserved. */

import { Injectable } from '@angular/core';
import { By } from '@angular/platform-browser';
import { DebugElement } from '@angular/core';
import { AlertMessageService, AlertMessage } from "../shared/alert-message/index";
import { Router } from '@angular/router'
import { Subject } from 'rxjs/Rx';
import 'rxjs/add/operator/toPromise';
import { async, ComponentFixture, TestBed, inject, getTestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { environment } from '../../environments/environment'
import { RouterTestingModule } from '@angular/router/testing';

import { ClaimApiHeaderInstWService } from './claim-api-header-inst-w.service';
import { ClaimApiHeaderInstW } from '../api-models/claim-api-header-inst-w.model'
import { ClaimApiHeaderInstWs } from "../api-models/testing/fake-claim-api-header-inst-w.model"

describe('ClaimApiHeaderInstWService', () => {
  let injector: TestBed;
  let service: ClaimApiHeaderInstWService;
  let httpMock: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [ClaimApiHeaderInstWService]
    });
    injector = getTestBed();
    service = injector.get(ClaimApiHeaderInstWService);
    httpMock = injector.get(HttpTestingController);
  });

  afterEach(() => {
      httpMock.verify();
  });
  describe('#getClaimApiHeaderInstWs', () => {
    it('should return an Promise<ClaimApiHeaderInstW[]>', () => {
      const claimApiHeaderInstW = [
       {occurrence2:'sample data', occurrence2Date:'sample data', occurrence3:'sample data', occurrence3Date:'sample data', occurrence4:'sample data', occurrence4Date:'sample data', occurrence5:'sample data', occurrence5Date:'sample data', occurSpanCode:'sample data', occurSpanFrom:'sample data', occurSpanThru:'sample data', conditionCode1:'sample data', conditionCode2:'sample data', conditionCode3:'sample data', conditionCode4:'sample data', conditionCode5:'sample data', conditionCode6:'sample data', conditionCode7:'sample data', value1Code:'sample data', value1Amt:'sample data', valueLine1:'sample data', value2Code:'sample data', value2Amt:'sample data', valueLine2:'sample data', value3Code:'sample data', value3Amt:'sample data', procCodingMethod:'sample data', procedure1Code:'sample data', procedure1Date:'sample data', procedure2Code:'sample data', procedure2Date:'sample data', procedure3Code:'sample data', procedure3Date:'sample data', procedure4Code:'sample data', procedure4Date:'sample data', procedure5Code:'sample data', procedure5Date:'sample data', procedure6Code:'sample data', procedure6Date:'sample data', otherProvId:'sample data', stateUnlabeled1:'sample data', stateUnlabeled2:'sample data', stateUnlabeled3:'sample data', stateUnlabeled4:'sample data', natlUnlabeled1:'sample data', natlUnlabeled2:'sample data', natlUnlabeled3:'sample data', natlUnlabeled4:'sample data', status:'sample data', coveredDays:'sample data', coinsuranceDays:'sample data', lifetimeReserveDays:'sample data', admissionDate:'sample data', dischargeHour:'sample data', assignmentOfBenefits:'sample data', remarks:'sample data', pricerBaseReimbAmt:1234, pricerOutlierPayments:1234, pricerAltLevelCarePaym:1234, pricerTotalReimbAmt:1234, pricerOutlierType:1234, pricerAverageLos:1234, noncoveredDays:'sample data', medicalRelease:'sample data', occurrence6:'sample data', occurrence6Date:'sample data', occurrence7:'sample data', claimNumber:'sample data', batchNumber:'sample data', primarySvcDate:'sample data', claimThruDate:'sample data', authNumber:'sample data', secondaryAuth:'sample data', billType:'sample data', readmitContinueFl:'sample data', patientControlNumber:'sample data', medicalRecordNo:'sample data', patientStatus:'sample data', subscriberId:'sample data', personNumber:'sample data', patLastName:'sample data', patFirstName:'sample data', patMi:'sample data', patDateOfBirth:'sample data', memberGender:'sample data', providerNumber:'sample data', vendorId:'sample data', admProvIdNo:'sample data', attProvIdNo:'sample data', placeOfService1:'sample data', diagnosisCode1:'sample data', diagnosisCode2:'sample data', diagnosisCode3:'sample data', diagnosisCode4:'sample data', diagnosisCode5:'sample data', diagnosisCode6:'sample data', diagnosisCode7:'sample data', diagnosisCode8:'sample data', diagnosisCode9:'sample data', userDefined1:'sample data', userDefined2:'sample data', birthWeight:'sample data', admitHour:'sample data', admitType:'sample data', admitSource:'sample data', ageInDaysAdmit:'sample data', ageInDaysDisch:'sample data', admittingDiagnosis:'sample data', icd9Code:'sample data', explanationAttached:'sample data', occurrence1:'sample data', occurrence1Date:'sample data', occurrence7Date:'sample data', occurrence8:'sample data', occurrence8Date:'sample data', occur2SpanCode:'sample data', occur2SpanFrom:'sample data', occur2SpanThru:'sample data', value4Code:'sample data', value4Amt:1234, value5Code:'sample data', value5Amt:1234, value6Code:'sample data', value6Amt:1234, value7Code:'sample data', value7Amt:1234, value8Code:'sample data', value8Amt:1234, value9Code:'sample data', value9Amt:1234, value10Code:'sample data', value10Amt:1234, value11Code:'sample data', value11Amt:1234, value12Code:'sample data', value12Amt:1234, stateUnlabeled5:'sample data', stateUnlabeled6:'sample data', stateUnlabeled7:'sample data', stateUnlabeled8:'sample data', authWaiveMethod:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', attProvPcp:'sample data', ocCarrierCode:'sample data', cobAllwdAmtRule:'sample data', cobAllwdAmtRsn:'sample data', paySubscriber:'sample data', drgCode:'sample data', totalBilledAmt:'sample data', diamondId:'sample data', providerPostalCode:'sample data', actualAdmissionDate:'2018-01-01'},
       {occurrence2:'sample data', occurrence2Date:'sample data', occurrence3:'sample data', occurrence3Date:'sample data', occurrence4:'sample data', occurrence4Date:'sample data', occurrence5:'sample data', occurrence5Date:'sample data', occurSpanCode:'sample data', occurSpanFrom:'sample data', occurSpanThru:'sample data', conditionCode1:'sample data', conditionCode2:'sample data', conditionCode3:'sample data', conditionCode4:'sample data', conditionCode5:'sample data', conditionCode6:'sample data', conditionCode7:'sample data', value1Code:'sample data', value1Amt:'sample data', valueLine1:'sample data', value2Code:'sample data', value2Amt:'sample data', valueLine2:'sample data', value3Code:'sample data', value3Amt:'sample data', procCodingMethod:'sample data', procedure1Code:'sample data', procedure1Date:'sample data', procedure2Code:'sample data', procedure2Date:'sample data', procedure3Code:'sample data', procedure3Date:'sample data', procedure4Code:'sample data', procedure4Date:'sample data', procedure5Code:'sample data', procedure5Date:'sample data', procedure6Code:'sample data', procedure6Date:'sample data', otherProvId:'sample data', stateUnlabeled1:'sample data', stateUnlabeled2:'sample data', stateUnlabeled3:'sample data', stateUnlabeled4:'sample data', natlUnlabeled1:'sample data', natlUnlabeled2:'sample data', natlUnlabeled3:'sample data', natlUnlabeled4:'sample data', status:'sample data', coveredDays:'sample data', coinsuranceDays:'sample data', lifetimeReserveDays:'sample data', admissionDate:'sample data', dischargeHour:'sample data', assignmentOfBenefits:'sample data', remarks:'sample data', pricerBaseReimbAmt:1234, pricerOutlierPayments:1234, pricerAltLevelCarePaym:1234, pricerTotalReimbAmt:1234, pricerOutlierType:1234, pricerAverageLos:1234, noncoveredDays:'sample data', medicalRelease:'sample data', occurrence6:'sample data', occurrence6Date:'sample data', occurrence7:'sample data', claimNumber:'sample data', batchNumber:'sample data', primarySvcDate:'sample data', claimThruDate:'sample data', authNumber:'sample data', secondaryAuth:'sample data', billType:'sample data', readmitContinueFl:'sample data', patientControlNumber:'sample data', medicalRecordNo:'sample data', patientStatus:'sample data', subscriberId:'sample data', personNumber:'sample data', patLastName:'sample data', patFirstName:'sample data', patMi:'sample data', patDateOfBirth:'sample data', memberGender:'sample data', providerNumber:'sample data', vendorId:'sample data', admProvIdNo:'sample data', attProvIdNo:'sample data', placeOfService1:'sample data', diagnosisCode1:'sample data', diagnosisCode2:'sample data', diagnosisCode3:'sample data', diagnosisCode4:'sample data', diagnosisCode5:'sample data', diagnosisCode6:'sample data', diagnosisCode7:'sample data', diagnosisCode8:'sample data', diagnosisCode9:'sample data', userDefined1:'sample data', userDefined2:'sample data', birthWeight:'sample data', admitHour:'sample data', admitType:'sample data', admitSource:'sample data', ageInDaysAdmit:'sample data', ageInDaysDisch:'sample data', admittingDiagnosis:'sample data', icd9Code:'sample data', explanationAttached:'sample data', occurrence1:'sample data', occurrence1Date:'sample data', occurrence7Date:'sample data', occurrence8:'sample data', occurrence8Date:'sample data', occur2SpanCode:'sample data', occur2SpanFrom:'sample data', occur2SpanThru:'sample data', value4Code:'sample data', value4Amt:1234, value5Code:'sample data', value5Amt:1234, value6Code:'sample data', value6Amt:1234, value7Code:'sample data', value7Amt:1234, value8Code:'sample data', value8Amt:1234, value9Code:'sample data', value9Amt:1234, value10Code:'sample data', value10Amt:1234, value11Code:'sample data', value11Amt:1234, value12Code:'sample data', value12Amt:1234, stateUnlabeled5:'sample data', stateUnlabeled6:'sample data', stateUnlabeled7:'sample data', stateUnlabeled8:'sample data', authWaiveMethod:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', attProvPcp:'sample data', ocCarrierCode:'sample data', cobAllwdAmtRule:'sample data', cobAllwdAmtRsn:'sample data', paySubscriber:'sample data', drgCode:'sample data', totalBilledAmt:'sample data', diamondId:'sample data', providerPostalCode:'sample data', actualAdmissionDate:'2018-01-01'},
       {occurrence2:'sample data', occurrence2Date:'sample data', occurrence3:'sample data', occurrence3Date:'sample data', occurrence4:'sample data', occurrence4Date:'sample data', occurrence5:'sample data', occurrence5Date:'sample data', occurSpanCode:'sample data', occurSpanFrom:'sample data', occurSpanThru:'sample data', conditionCode1:'sample data', conditionCode2:'sample data', conditionCode3:'sample data', conditionCode4:'sample data', conditionCode5:'sample data', conditionCode6:'sample data', conditionCode7:'sample data', value1Code:'sample data', value1Amt:'sample data', valueLine1:'sample data', value2Code:'sample data', value2Amt:'sample data', valueLine2:'sample data', value3Code:'sample data', value3Amt:'sample data', procCodingMethod:'sample data', procedure1Code:'sample data', procedure1Date:'sample data', procedure2Code:'sample data', procedure2Date:'sample data', procedure3Code:'sample data', procedure3Date:'sample data', procedure4Code:'sample data', procedure4Date:'sample data', procedure5Code:'sample data', procedure5Date:'sample data', procedure6Code:'sample data', procedure6Date:'sample data', otherProvId:'sample data', stateUnlabeled1:'sample data', stateUnlabeled2:'sample data', stateUnlabeled3:'sample data', stateUnlabeled4:'sample data', natlUnlabeled1:'sample data', natlUnlabeled2:'sample data', natlUnlabeled3:'sample data', natlUnlabeled4:'sample data', status:'sample data', coveredDays:'sample data', coinsuranceDays:'sample data', lifetimeReserveDays:'sample data', admissionDate:'sample data', dischargeHour:'sample data', assignmentOfBenefits:'sample data', remarks:'sample data', pricerBaseReimbAmt:1234, pricerOutlierPayments:1234, pricerAltLevelCarePaym:1234, pricerTotalReimbAmt:1234, pricerOutlierType:1234, pricerAverageLos:1234, noncoveredDays:'sample data', medicalRelease:'sample data', occurrence6:'sample data', occurrence6Date:'sample data', occurrence7:'sample data', claimNumber:'sample data', batchNumber:'sample data', primarySvcDate:'sample data', claimThruDate:'sample data', authNumber:'sample data', secondaryAuth:'sample data', billType:'sample data', readmitContinueFl:'sample data', patientControlNumber:'sample data', medicalRecordNo:'sample data', patientStatus:'sample data', subscriberId:'sample data', personNumber:'sample data', patLastName:'sample data', patFirstName:'sample data', patMi:'sample data', patDateOfBirth:'sample data', memberGender:'sample data', providerNumber:'sample data', vendorId:'sample data', admProvIdNo:'sample data', attProvIdNo:'sample data', placeOfService1:'sample data', diagnosisCode1:'sample data', diagnosisCode2:'sample data', diagnosisCode3:'sample data', diagnosisCode4:'sample data', diagnosisCode5:'sample data', diagnosisCode6:'sample data', diagnosisCode7:'sample data', diagnosisCode8:'sample data', diagnosisCode9:'sample data', userDefined1:'sample data', userDefined2:'sample data', birthWeight:'sample data', admitHour:'sample data', admitType:'sample data', admitSource:'sample data', ageInDaysAdmit:'sample data', ageInDaysDisch:'sample data', admittingDiagnosis:'sample data', icd9Code:'sample data', explanationAttached:'sample data', occurrence1:'sample data', occurrence1Date:'sample data', occurrence7Date:'sample data', occurrence8:'sample data', occurrence8Date:'sample data', occur2SpanCode:'sample data', occur2SpanFrom:'sample data', occur2SpanThru:'sample data', value4Code:'sample data', value4Amt:1234, value5Code:'sample data', value5Amt:1234, value6Code:'sample data', value6Amt:1234, value7Code:'sample data', value7Amt:1234, value8Code:'sample data', value8Amt:1234, value9Code:'sample data', value9Amt:1234, value10Code:'sample data', value10Amt:1234, value11Code:'sample data', value11Amt:1234, value12Code:'sample data', value12Amt:1234, stateUnlabeled5:'sample data', stateUnlabeled6:'sample data', stateUnlabeled7:'sample data', stateUnlabeled8:'sample data', authWaiveMethod:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', attProvPcp:'sample data', ocCarrierCode:'sample data', cobAllwdAmtRule:'sample data', cobAllwdAmtRsn:'sample data', paySubscriber:'sample data', drgCode:'sample data', totalBilledAmt:'sample data', diamondId:'sample data', providerPostalCode:'sample data', actualAdmissionDate:'2018-01-01'}

      ];
      service.getClaimApiHeaderInstWs().subscribe(users => {
        expect(users.length).toBe(3);
      });

      const req = httpMock.expectOne(`${environment.apiUrl}/claimapiheaderinstws/?use-pagination=false&page=0&size=0`);
      expect(req.request.method).toBe("GET");
      req.flush(claimApiHeaderInstW);
    });
  });


  describe('#createClaimApiHeaderInstW', () => {
    var id = 1;
    it('should return an Promise<ClaimApiHeaderInstW>', () => {
      const claimApiHeaderInstW: ClaimApiHeaderInstW = {occurrence2:'sample data', occurrence2Date:'sample data', occurrence3:'sample data', occurrence3Date:'sample data', occurrence4:'sample data', occurrence4Date:'sample data', occurrence5:'sample data', occurrence5Date:'sample data', occurSpanCode:'sample data', occurSpanFrom:'sample data', occurSpanThru:'sample data', conditionCode1:'sample data', conditionCode2:'sample data', conditionCode3:'sample data', conditionCode4:'sample data', conditionCode5:'sample data', conditionCode6:'sample data', conditionCode7:'sample data', value1Code:'sample data', value1Amt:'sample data', valueLine1:'sample data', value2Code:'sample data', value2Amt:'sample data', valueLine2:'sample data', value3Code:'sample data', value3Amt:'sample data', procCodingMethod:'sample data', procedure1Code:'sample data', procedure1Date:'sample data', procedure2Code:'sample data', procedure2Date:'sample data', procedure3Code:'sample data', procedure3Date:'sample data', procedure4Code:'sample data', procedure4Date:'sample data', procedure5Code:'sample data', procedure5Date:'sample data', procedure6Code:'sample data', procedure6Date:'sample data', otherProvId:'sample data', stateUnlabeled1:'sample data', stateUnlabeled2:'sample data', stateUnlabeled3:'sample data', stateUnlabeled4:'sample data', natlUnlabeled1:'sample data', natlUnlabeled2:'sample data', natlUnlabeled3:'sample data', natlUnlabeled4:'sample data', status:'sample data', coveredDays:'sample data', coinsuranceDays:'sample data', lifetimeReserveDays:'sample data', admissionDate:'sample data', dischargeHour:'sample data', assignmentOfBenefits:'sample data', remarks:'sample data', pricerBaseReimbAmt:1234, pricerOutlierPayments:1234, pricerAltLevelCarePaym:1234, pricerTotalReimbAmt:1234, pricerOutlierType:1234, pricerAverageLos:1234, noncoveredDays:'sample data', medicalRelease:'sample data', occurrence6:'sample data', occurrence6Date:'sample data', occurrence7:'sample data', claimNumber:'sample data', batchNumber:'sample data', primarySvcDate:'sample data', claimThruDate:'sample data', authNumber:'sample data', secondaryAuth:'sample data', billType:'sample data', readmitContinueFl:'sample data', patientControlNumber:'sample data', medicalRecordNo:'sample data', patientStatus:'sample data', subscriberId:'sample data', personNumber:'sample data', patLastName:'sample data', patFirstName:'sample data', patMi:'sample data', patDateOfBirth:'sample data', memberGender:'sample data', providerNumber:'sample data', vendorId:'sample data', admProvIdNo:'sample data', attProvIdNo:'sample data', placeOfService1:'sample data', diagnosisCode1:'sample data', diagnosisCode2:'sample data', diagnosisCode3:'sample data', diagnosisCode4:'sample data', diagnosisCode5:'sample data', diagnosisCode6:'sample data', diagnosisCode7:'sample data', diagnosisCode8:'sample data', diagnosisCode9:'sample data', userDefined1:'sample data', userDefined2:'sample data', birthWeight:'sample data', admitHour:'sample data', admitType:'sample data', admitSource:'sample data', ageInDaysAdmit:'sample data', ageInDaysDisch:'sample data', admittingDiagnosis:'sample data', icd9Code:'sample data', explanationAttached:'sample data', occurrence1:'sample data', occurrence1Date:'sample data', occurrence7Date:'sample data', occurrence8:'sample data', occurrence8Date:'sample data', occur2SpanCode:'sample data', occur2SpanFrom:'sample data', occur2SpanThru:'sample data', value4Code:'sample data', value4Amt:1234, value5Code:'sample data', value5Amt:1234, value6Code:'sample data', value6Amt:1234, value7Code:'sample data', value7Amt:1234, value8Code:'sample data', value8Amt:1234, value9Code:'sample data', value9Amt:1234, value10Code:'sample data', value10Amt:1234, value11Code:'sample data', value11Amt:1234, value12Code:'sample data', value12Amt:1234, stateUnlabeled5:'sample data', stateUnlabeled6:'sample data', stateUnlabeled7:'sample data', stateUnlabeled8:'sample data', authWaiveMethod:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', attProvPcp:'sample data', ocCarrierCode:'sample data', cobAllwdAmtRule:'sample data', cobAllwdAmtRsn:'sample data', paySubscriber:'sample data', drgCode:'sample data', totalBilledAmt:'sample data', diamondId:'sample data', providerPostalCode:'sample data', actualAdmissionDate:'2018-01-01'};
      service.createClaimApiHeaderInstW(claimApiHeaderInstW).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/claimapiheaderinstws`);
      expect(req.request.method).toBe("POST");
      req.flush(null, { status: 200, statusText: 'Ok' });

    });
  });


  describe('#updateClaimApiHeaderInstW', () => {
    var id = 1;
    it('should return an Promise<ClaimApiHeaderInstW>', () => {
      const claimApiHeaderInstW: ClaimApiHeaderInstW = {occurrence2:'sample data', occurrence2Date:'sample data', occurrence3:'sample data', occurrence3Date:'sample data', occurrence4:'sample data', occurrence4Date:'sample data', occurrence5:'sample data', occurrence5Date:'sample data', occurSpanCode:'sample data', occurSpanFrom:'sample data', occurSpanThru:'sample data', conditionCode1:'sample data', conditionCode2:'sample data', conditionCode3:'sample data', conditionCode4:'sample data', conditionCode5:'sample data', conditionCode6:'sample data', conditionCode7:'sample data', value1Code:'sample data', value1Amt:'sample data', valueLine1:'sample data', value2Code:'sample data', value2Amt:'sample data', valueLine2:'sample data', value3Code:'sample data', value3Amt:'sample data', procCodingMethod:'sample data', procedure1Code:'sample data', procedure1Date:'sample data', procedure2Code:'sample data', procedure2Date:'sample data', procedure3Code:'sample data', procedure3Date:'sample data', procedure4Code:'sample data', procedure4Date:'sample data', procedure5Code:'sample data', procedure5Date:'sample data', procedure6Code:'sample data', procedure6Date:'sample data', otherProvId:'sample data', stateUnlabeled1:'sample data', stateUnlabeled2:'sample data', stateUnlabeled3:'sample data', stateUnlabeled4:'sample data', natlUnlabeled1:'sample data', natlUnlabeled2:'sample data', natlUnlabeled3:'sample data', natlUnlabeled4:'sample data', status:'sample data', coveredDays:'sample data', coinsuranceDays:'sample data', lifetimeReserveDays:'sample data', admissionDate:'sample data', dischargeHour:'sample data', assignmentOfBenefits:'sample data', remarks:'sample data', pricerBaseReimbAmt:1234, pricerOutlierPayments:1234, pricerAltLevelCarePaym:1234, pricerTotalReimbAmt:1234, pricerOutlierType:1234, pricerAverageLos:1234, noncoveredDays:'sample data', medicalRelease:'sample data', occurrence6:'sample data', occurrence6Date:'sample data', occurrence7:'sample data', claimNumber:'sample data', batchNumber:'sample data', primarySvcDate:'sample data', claimThruDate:'sample data', authNumber:'sample data', secondaryAuth:'sample data', billType:'sample data', readmitContinueFl:'sample data', patientControlNumber:'sample data', medicalRecordNo:'sample data', patientStatus:'sample data', subscriberId:'sample data', personNumber:'sample data', patLastName:'sample data', patFirstName:'sample data', patMi:'sample data', patDateOfBirth:'sample data', memberGender:'sample data', providerNumber:'sample data', vendorId:'sample data', admProvIdNo:'sample data', attProvIdNo:'sample data', placeOfService1:'sample data', diagnosisCode1:'sample data', diagnosisCode2:'sample data', diagnosisCode3:'sample data', diagnosisCode4:'sample data', diagnosisCode5:'sample data', diagnosisCode6:'sample data', diagnosisCode7:'sample data', diagnosisCode8:'sample data', diagnosisCode9:'sample data', userDefined1:'sample data', userDefined2:'sample data', birthWeight:'sample data', admitHour:'sample data', admitType:'sample data', admitSource:'sample data', ageInDaysAdmit:'sample data', ageInDaysDisch:'sample data', admittingDiagnosis:'sample data', icd9Code:'sample data', explanationAttached:'sample data', occurrence1:'sample data', occurrence1Date:'sample data', occurrence7Date:'sample data', occurrence8:'sample data', occurrence8Date:'sample data', occur2SpanCode:'sample data', occur2SpanFrom:'sample data', occur2SpanThru:'sample data', value4Code:'sample data', value4Amt:1234, value5Code:'sample data', value5Amt:1234, value6Code:'sample data', value6Amt:1234, value7Code:'sample data', value7Amt:1234, value8Code:'sample data', value8Amt:1234, value9Code:'sample data', value9Amt:1234, value10Code:'sample data', value10Amt:1234, value11Code:'sample data', value11Amt:1234, value12Code:'sample data', value12Amt:1234, stateUnlabeled5:'sample data', stateUnlabeled6:'sample data', stateUnlabeled7:'sample data', stateUnlabeled8:'sample data', authWaiveMethod:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', attProvPcp:'sample data', ocCarrierCode:'sample data', cobAllwdAmtRule:'sample data', cobAllwdAmtRsn:'sample data', paySubscriber:'sample data', drgCode:'sample data', totalBilledAmt:'sample data', diamondId:'sample data', providerPostalCode:'sample data', actualAdmissionDate:'2018-01-01'};
      service.updateClaimApiHeaderInstW(claimApiHeaderInstW, id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/claimapiheaderinstws/${id}`);
      expect(req.request.method).toBe("PUT");
      req.flush(null, { status: 200, statusText: 'Ok' });
    });
  });


  describe('#deleteClaimApiHeaderInstW', () => {
    var id = 1;
    it('should call delete method with correct parameter', () => {
      service.deleteClaimApiHeaderInstW(id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/claimapiheaderinstws/${id}`);
      expect(req.request.method).toBe("DELETE");
      req.flush(null, { status: 400, statusText: 'Ok' });
    });
  });


});