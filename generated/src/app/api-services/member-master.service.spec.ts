/* Copyright (c) 2020 . All Rights Reserved. */

import { Injectable } from '@angular/core';
import { By } from '@angular/platform-browser';
import { DebugElement } from '@angular/core';
import { AlertMessageService, AlertMessage } from "../shared/alert-message/index";
import { Router } from '@angular/router'
import { Subject } from 'rxjs/Rx';
import 'rxjs/add/operator/toPromise';
import { async, ComponentFixture, TestBed, inject, getTestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { environment } from '../../environments/environment'
import { RouterTestingModule } from '@angular/router/testing';

import { MemberMasterService } from './member-master.service';
import { MemberMaster } from '../api-models/member-master.model'
import { MemberMasters } from "../api-models/testing/fake-member-master.model"

describe('MemberMasterService', () => {
  let injector: TestBed;
  let service: MemberMasterService;
  let httpMock: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [MemberMasterService]
    });
    injector = getTestBed();
    service = injector.get(MemberMasterService);
    httpMock = injector.get(HttpTestingController);
  });

  afterEach(() => {
      httpMock.verify();
  });
  describe('#getMemberMasters', () => {
    it('should return an Promise<MemberMaster[]>', () => {
      const memberMaster = [
       {seqMembId:1234, seqSubsId:1234, subscriberId:'sample data', personNumber:'sample data', lastName:'sample data', firstName:'sample data', middleInitial:'sample data', addressLine1:'sample data', addressLine2:'sample data', city:'sample data', state:'sample data', zipCode:'sample data', homePhoneNumber:'sample data', busPhoneNumber:'sample data', contactTitle:'sample data', dateOfBirth:'2018-01-01', gender:'sample data', maritalStatus:'sample data', languageCode:'sample data', userDefined1:'sample data', userDefined2:'sample data', medicareNo:'sample data', medicaidNo:'sample data', socialSecNo:'sample data', employeeNo:'sample data', medicalRecNo:'sample data', seqAltMembId:1234, holdReason:'sample data', holdDate:'2018-01-01', depVerifStatus:'sample data', akaLastName:'sample data', akaFirstName:'sample data', akaAddressLine1:'sample data', akaAddressLine2:'sample data', akaCity:'sample data', akaState:'sample data', akaZipCode:'sample data', akaPhoneNumber:'sample data', respLastName:'sample data', respFirstName:'sample data', respAddressLine1:'sample data', respAddressLine2:'sample data', respCity:'sample data', respState:'sample data', respZipCode:'sample data', respPhoneNumber:'sample data', verfiedThruDate:'2018-01-01', subsUpdate:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', caseManagementSwitch:'sample data', akaCountry:'sample data', respCountry:'sample data', country:'sample data', prevSubscriberId:'sample data', subscIdChangeRequestUser:'sample data', subscIdChangeRequestDate:'2018-01-01', diamondId:'sample data', dualCoverageFlag:'sample data', verifOthCoverDate:'2018-01-01', verifFollowUpDate:'2018-01-01', verifStatusCode:'sample data', employmentStatusCode:'sample data', userDefined3:'sample data', userDefined4:'sample data', userDefined5:'sample data', userDefined6:'sample data', userDefined7:'sample data', userDefined8:'sample data', userDefined9:'sample data', userDefined10:'sample data', userDefined11:'sample data', userDefined12:'sample data', userDefined13:'sample data', userDefined14:'sample data', userDefined15:'sample data', userDefined16:'sample data', userDefined17:'sample data', userDefined18:'sample data', userDefined19:'sample data', userDefined20:'sample data', userDefined21:'sample data', userDefined22:'sample data', userDate1:'2018-01-01', userDate2:'2018-01-01', userDate3:'2018-01-01', userDate4:'2018-01-01', userDate5:'2018-01-01', userDate6:'2018-01-01', userDate7:'2018-01-01', userDate8:'2018-01-01', userDate9:'2018-01-01', userDate10:'2018-01-01', userDate11:'2018-01-01', userDate12:'2018-01-01', userDate13:'2018-01-01', userDate14:'2018-01-01', userDate15:'2018-01-01', userDate16:'2018-01-01', userDate17:'2018-01-01', userDate18:'2018-01-01', userDate19:'2018-01-01', userDate20:'2018-01-01', longitude:1234, latitude:1234, geoResult:'sample data', privLastName:'sample data', privFirstName:'sample data', privAddressLine1:'sample data', privAddressLine2:'sample data', privCity:'sample data', privState:'sample data', privZipCode:'sample data', privPhoneNumber:'sample data', privCountry:'sample data', mcIndicator:'sample data', studentStatusDetail:'sample data', depVerifUserDefined1:'sample data', depVerifUserDefined2:'sample data', depVerifUserDate1:'2018-01-01', depVerifUserDate2:'2018-01-01', cobVerifUserDefined1:'sample data', cobVerifUserDefined2:'sample data', cobVerifUserDate1:'2018-01-01', cobVerifUserDate2:'2018-01-01'},
       {seqMembId:1234, seqSubsId:1234, subscriberId:'sample data', personNumber:'sample data', lastName:'sample data', firstName:'sample data', middleInitial:'sample data', addressLine1:'sample data', addressLine2:'sample data', city:'sample data', state:'sample data', zipCode:'sample data', homePhoneNumber:'sample data', busPhoneNumber:'sample data', contactTitle:'sample data', dateOfBirth:'2018-01-01', gender:'sample data', maritalStatus:'sample data', languageCode:'sample data', userDefined1:'sample data', userDefined2:'sample data', medicareNo:'sample data', medicaidNo:'sample data', socialSecNo:'sample data', employeeNo:'sample data', medicalRecNo:'sample data', seqAltMembId:1234, holdReason:'sample data', holdDate:'2018-01-01', depVerifStatus:'sample data', akaLastName:'sample data', akaFirstName:'sample data', akaAddressLine1:'sample data', akaAddressLine2:'sample data', akaCity:'sample data', akaState:'sample data', akaZipCode:'sample data', akaPhoneNumber:'sample data', respLastName:'sample data', respFirstName:'sample data', respAddressLine1:'sample data', respAddressLine2:'sample data', respCity:'sample data', respState:'sample data', respZipCode:'sample data', respPhoneNumber:'sample data', verfiedThruDate:'2018-01-01', subsUpdate:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', caseManagementSwitch:'sample data', akaCountry:'sample data', respCountry:'sample data', country:'sample data', prevSubscriberId:'sample data', subscIdChangeRequestUser:'sample data', subscIdChangeRequestDate:'2018-01-01', diamondId:'sample data', dualCoverageFlag:'sample data', verifOthCoverDate:'2018-01-01', verifFollowUpDate:'2018-01-01', verifStatusCode:'sample data', employmentStatusCode:'sample data', userDefined3:'sample data', userDefined4:'sample data', userDefined5:'sample data', userDefined6:'sample data', userDefined7:'sample data', userDefined8:'sample data', userDefined9:'sample data', userDefined10:'sample data', userDefined11:'sample data', userDefined12:'sample data', userDefined13:'sample data', userDefined14:'sample data', userDefined15:'sample data', userDefined16:'sample data', userDefined17:'sample data', userDefined18:'sample data', userDefined19:'sample data', userDefined20:'sample data', userDefined21:'sample data', userDefined22:'sample data', userDate1:'2018-01-01', userDate2:'2018-01-01', userDate3:'2018-01-01', userDate4:'2018-01-01', userDate5:'2018-01-01', userDate6:'2018-01-01', userDate7:'2018-01-01', userDate8:'2018-01-01', userDate9:'2018-01-01', userDate10:'2018-01-01', userDate11:'2018-01-01', userDate12:'2018-01-01', userDate13:'2018-01-01', userDate14:'2018-01-01', userDate15:'2018-01-01', userDate16:'2018-01-01', userDate17:'2018-01-01', userDate18:'2018-01-01', userDate19:'2018-01-01', userDate20:'2018-01-01', longitude:1234, latitude:1234, geoResult:'sample data', privLastName:'sample data', privFirstName:'sample data', privAddressLine1:'sample data', privAddressLine2:'sample data', privCity:'sample data', privState:'sample data', privZipCode:'sample data', privPhoneNumber:'sample data', privCountry:'sample data', mcIndicator:'sample data', studentStatusDetail:'sample data', depVerifUserDefined1:'sample data', depVerifUserDefined2:'sample data', depVerifUserDate1:'2018-01-01', depVerifUserDate2:'2018-01-01', cobVerifUserDefined1:'sample data', cobVerifUserDefined2:'sample data', cobVerifUserDate1:'2018-01-01', cobVerifUserDate2:'2018-01-01'},
       {seqMembId:1234, seqSubsId:1234, subscriberId:'sample data', personNumber:'sample data', lastName:'sample data', firstName:'sample data', middleInitial:'sample data', addressLine1:'sample data', addressLine2:'sample data', city:'sample data', state:'sample data', zipCode:'sample data', homePhoneNumber:'sample data', busPhoneNumber:'sample data', contactTitle:'sample data', dateOfBirth:'2018-01-01', gender:'sample data', maritalStatus:'sample data', languageCode:'sample data', userDefined1:'sample data', userDefined2:'sample data', medicareNo:'sample data', medicaidNo:'sample data', socialSecNo:'sample data', employeeNo:'sample data', medicalRecNo:'sample data', seqAltMembId:1234, holdReason:'sample data', holdDate:'2018-01-01', depVerifStatus:'sample data', akaLastName:'sample data', akaFirstName:'sample data', akaAddressLine1:'sample data', akaAddressLine2:'sample data', akaCity:'sample data', akaState:'sample data', akaZipCode:'sample data', akaPhoneNumber:'sample data', respLastName:'sample data', respFirstName:'sample data', respAddressLine1:'sample data', respAddressLine2:'sample data', respCity:'sample data', respState:'sample data', respZipCode:'sample data', respPhoneNumber:'sample data', verfiedThruDate:'2018-01-01', subsUpdate:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', caseManagementSwitch:'sample data', akaCountry:'sample data', respCountry:'sample data', country:'sample data', prevSubscriberId:'sample data', subscIdChangeRequestUser:'sample data', subscIdChangeRequestDate:'2018-01-01', diamondId:'sample data', dualCoverageFlag:'sample data', verifOthCoverDate:'2018-01-01', verifFollowUpDate:'2018-01-01', verifStatusCode:'sample data', employmentStatusCode:'sample data', userDefined3:'sample data', userDefined4:'sample data', userDefined5:'sample data', userDefined6:'sample data', userDefined7:'sample data', userDefined8:'sample data', userDefined9:'sample data', userDefined10:'sample data', userDefined11:'sample data', userDefined12:'sample data', userDefined13:'sample data', userDefined14:'sample data', userDefined15:'sample data', userDefined16:'sample data', userDefined17:'sample data', userDefined18:'sample data', userDefined19:'sample data', userDefined20:'sample data', userDefined21:'sample data', userDefined22:'sample data', userDate1:'2018-01-01', userDate2:'2018-01-01', userDate3:'2018-01-01', userDate4:'2018-01-01', userDate5:'2018-01-01', userDate6:'2018-01-01', userDate7:'2018-01-01', userDate8:'2018-01-01', userDate9:'2018-01-01', userDate10:'2018-01-01', userDate11:'2018-01-01', userDate12:'2018-01-01', userDate13:'2018-01-01', userDate14:'2018-01-01', userDate15:'2018-01-01', userDate16:'2018-01-01', userDate17:'2018-01-01', userDate18:'2018-01-01', userDate19:'2018-01-01', userDate20:'2018-01-01', longitude:1234, latitude:1234, geoResult:'sample data', privLastName:'sample data', privFirstName:'sample data', privAddressLine1:'sample data', privAddressLine2:'sample data', privCity:'sample data', privState:'sample data', privZipCode:'sample data', privPhoneNumber:'sample data', privCountry:'sample data', mcIndicator:'sample data', studentStatusDetail:'sample data', depVerifUserDefined1:'sample data', depVerifUserDefined2:'sample data', depVerifUserDate1:'2018-01-01', depVerifUserDate2:'2018-01-01', cobVerifUserDefined1:'sample data', cobVerifUserDefined2:'sample data', cobVerifUserDate1:'2018-01-01', cobVerifUserDate2:'2018-01-01'}

      ];
      service.getMemberMasters().subscribe(users => {
        expect(users.length).toBe(3);
      });

      const req = httpMock.expectOne(`${environment.apiUrl}/membermasters/?use-pagination=false&page=0&size=0`);
      expect(req.request.method).toBe("GET");
      req.flush(memberMaster);
    });
  });


  describe('#createMemberMaster', () => {
    var id = 1;
    it('should return an Promise<MemberMaster>', () => {
      const memberMaster: MemberMaster = {seqMembId:1234, seqSubsId:1234, subscriberId:'sample data', personNumber:'sample data', lastName:'sample data', firstName:'sample data', middleInitial:'sample data', addressLine1:'sample data', addressLine2:'sample data', city:'sample data', state:'sample data', zipCode:'sample data', homePhoneNumber:'sample data', busPhoneNumber:'sample data', contactTitle:'sample data', dateOfBirth:'2018-01-01', gender:'sample data', maritalStatus:'sample data', languageCode:'sample data', userDefined1:'sample data', userDefined2:'sample data', medicareNo:'sample data', medicaidNo:'sample data', socialSecNo:'sample data', employeeNo:'sample data', medicalRecNo:'sample data', seqAltMembId:1234, holdReason:'sample data', holdDate:'2018-01-01', depVerifStatus:'sample data', akaLastName:'sample data', akaFirstName:'sample data', akaAddressLine1:'sample data', akaAddressLine2:'sample data', akaCity:'sample data', akaState:'sample data', akaZipCode:'sample data', akaPhoneNumber:'sample data', respLastName:'sample data', respFirstName:'sample data', respAddressLine1:'sample data', respAddressLine2:'sample data', respCity:'sample data', respState:'sample data', respZipCode:'sample data', respPhoneNumber:'sample data', verfiedThruDate:'2018-01-01', subsUpdate:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', caseManagementSwitch:'sample data', akaCountry:'sample data', respCountry:'sample data', country:'sample data', prevSubscriberId:'sample data', subscIdChangeRequestUser:'sample data', subscIdChangeRequestDate:'2018-01-01', diamondId:'sample data', dualCoverageFlag:'sample data', verifOthCoverDate:'2018-01-01', verifFollowUpDate:'2018-01-01', verifStatusCode:'sample data', employmentStatusCode:'sample data', userDefined3:'sample data', userDefined4:'sample data', userDefined5:'sample data', userDefined6:'sample data', userDefined7:'sample data', userDefined8:'sample data', userDefined9:'sample data', userDefined10:'sample data', userDefined11:'sample data', userDefined12:'sample data', userDefined13:'sample data', userDefined14:'sample data', userDefined15:'sample data', userDefined16:'sample data', userDefined17:'sample data', userDefined18:'sample data', userDefined19:'sample data', userDefined20:'sample data', userDefined21:'sample data', userDefined22:'sample data', userDate1:'2018-01-01', userDate2:'2018-01-01', userDate3:'2018-01-01', userDate4:'2018-01-01', userDate5:'2018-01-01', userDate6:'2018-01-01', userDate7:'2018-01-01', userDate8:'2018-01-01', userDate9:'2018-01-01', userDate10:'2018-01-01', userDate11:'2018-01-01', userDate12:'2018-01-01', userDate13:'2018-01-01', userDate14:'2018-01-01', userDate15:'2018-01-01', userDate16:'2018-01-01', userDate17:'2018-01-01', userDate18:'2018-01-01', userDate19:'2018-01-01', userDate20:'2018-01-01', longitude:1234, latitude:1234, geoResult:'sample data', privLastName:'sample data', privFirstName:'sample data', privAddressLine1:'sample data', privAddressLine2:'sample data', privCity:'sample data', privState:'sample data', privZipCode:'sample data', privPhoneNumber:'sample data', privCountry:'sample data', mcIndicator:'sample data', studentStatusDetail:'sample data', depVerifUserDefined1:'sample data', depVerifUserDefined2:'sample data', depVerifUserDate1:'2018-01-01', depVerifUserDate2:'2018-01-01', cobVerifUserDefined1:'sample data', cobVerifUserDefined2:'sample data', cobVerifUserDate1:'2018-01-01', cobVerifUserDate2:'2018-01-01'};
      service.createMemberMaster(memberMaster).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/membermasters`);
      expect(req.request.method).toBe("POST");
      req.flush(null, { status: 200, statusText: 'Ok' });

    });
  });


  describe('#updateMemberMaster', () => {
    var id = 1;
    it('should return an Promise<MemberMaster>', () => {
      const memberMaster: MemberMaster = {seqMembId:1234, seqSubsId:1234, subscriberId:'sample data', personNumber:'sample data', lastName:'sample data', firstName:'sample data', middleInitial:'sample data', addressLine1:'sample data', addressLine2:'sample data', city:'sample data', state:'sample data', zipCode:'sample data', homePhoneNumber:'sample data', busPhoneNumber:'sample data', contactTitle:'sample data', dateOfBirth:'2018-01-01', gender:'sample data', maritalStatus:'sample data', languageCode:'sample data', userDefined1:'sample data', userDefined2:'sample data', medicareNo:'sample data', medicaidNo:'sample data', socialSecNo:'sample data', employeeNo:'sample data', medicalRecNo:'sample data', seqAltMembId:1234, holdReason:'sample data', holdDate:'2018-01-01', depVerifStatus:'sample data', akaLastName:'sample data', akaFirstName:'sample data', akaAddressLine1:'sample data', akaAddressLine2:'sample data', akaCity:'sample data', akaState:'sample data', akaZipCode:'sample data', akaPhoneNumber:'sample data', respLastName:'sample data', respFirstName:'sample data', respAddressLine1:'sample data', respAddressLine2:'sample data', respCity:'sample data', respState:'sample data', respZipCode:'sample data', respPhoneNumber:'sample data', verfiedThruDate:'2018-01-01', subsUpdate:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', caseManagementSwitch:'sample data', akaCountry:'sample data', respCountry:'sample data', country:'sample data', prevSubscriberId:'sample data', subscIdChangeRequestUser:'sample data', subscIdChangeRequestDate:'2018-01-01', diamondId:'sample data', dualCoverageFlag:'sample data', verifOthCoverDate:'2018-01-01', verifFollowUpDate:'2018-01-01', verifStatusCode:'sample data', employmentStatusCode:'sample data', userDefined3:'sample data', userDefined4:'sample data', userDefined5:'sample data', userDefined6:'sample data', userDefined7:'sample data', userDefined8:'sample data', userDefined9:'sample data', userDefined10:'sample data', userDefined11:'sample data', userDefined12:'sample data', userDefined13:'sample data', userDefined14:'sample data', userDefined15:'sample data', userDefined16:'sample data', userDefined17:'sample data', userDefined18:'sample data', userDefined19:'sample data', userDefined20:'sample data', userDefined21:'sample data', userDefined22:'sample data', userDate1:'2018-01-01', userDate2:'2018-01-01', userDate3:'2018-01-01', userDate4:'2018-01-01', userDate5:'2018-01-01', userDate6:'2018-01-01', userDate7:'2018-01-01', userDate8:'2018-01-01', userDate9:'2018-01-01', userDate10:'2018-01-01', userDate11:'2018-01-01', userDate12:'2018-01-01', userDate13:'2018-01-01', userDate14:'2018-01-01', userDate15:'2018-01-01', userDate16:'2018-01-01', userDate17:'2018-01-01', userDate18:'2018-01-01', userDate19:'2018-01-01', userDate20:'2018-01-01', longitude:1234, latitude:1234, geoResult:'sample data', privLastName:'sample data', privFirstName:'sample data', privAddressLine1:'sample data', privAddressLine2:'sample data', privCity:'sample data', privState:'sample data', privZipCode:'sample data', privPhoneNumber:'sample data', privCountry:'sample data', mcIndicator:'sample data', studentStatusDetail:'sample data', depVerifUserDefined1:'sample data', depVerifUserDefined2:'sample data', depVerifUserDate1:'2018-01-01', depVerifUserDate2:'2018-01-01', cobVerifUserDefined1:'sample data', cobVerifUserDefined2:'sample data', cobVerifUserDate1:'2018-01-01', cobVerifUserDate2:'2018-01-01'};
      service.updateMemberMaster(memberMaster, id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/membermasters/${id}`);
      expect(req.request.method).toBe("PUT");
      req.flush(null, { status: 200, statusText: 'Ok' });
    });
  });


  describe('#deleteMemberMaster', () => {
    var id = 1;
    it('should call delete method with correct parameter', () => {
      service.deleteMemberMaster(id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/membermasters/${id}`);
      expect(req.request.method).toBe("DELETE");
      req.flush(null, { status: 400, statusText: 'Ok' });
    });
  });


});