/* Copyright (c) 2020 . All Rights Reserved. */

import { Injectable } from '@angular/core';
import { By } from '@angular/platform-browser';
import { DebugElement } from '@angular/core';
import { AlertMessageService, AlertMessage } from "../shared/alert-message/index";
import { Router } from '@angular/router'
import { Subject } from 'rxjs/Rx';
import 'rxjs/add/operator/toPromise';
import { async, ComponentFixture, TestBed, inject, getTestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { environment } from '../../environments/environment'
import { RouterTestingModule } from '@angular/router/testing';

import { LetterDataSourceMemberService } from './letter-data-source-member.service';
import { LetterDataSourceMember } from '../api-models/letter-data-source-member.model'
import { LetterDataSourceMembers } from "../api-models/testing/fake-letter-data-source-member.model"

describe('LetterDataSourceMemberService', () => {
  let injector: TestBed;
  let service: LetterDataSourceMemberService;
  let httpMock: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [LetterDataSourceMemberService]
    });
    injector = getTestBed();
    service = injector.get(LetterDataSourceMemberService);
    httpMock = injector.get(HttpTestingController);
  });

  afterEach(() => {
      httpMock.verify();
  });
  describe('#getLetterDataSourceMembers', () => {
    it('should return an Promise<LetterDataSourceMember[]>', () => {
      const letterDataSourceMember = [
       {seqLetterDataSource:1234, letterId:'sample data', letterIdSuffix:'sample data', aLastName:'sample data', aFirstName:'sample data', aShortName:'sample data', aAddrLine1:'sample data', aAddrLine2:'sample data', aCity:'sample data', aState:'sample data', aZipCode:'sample data', aPhoneNumber:'sample data', aContactName:'sample data', aContactTitle:'sample data', mSubsId:'sample data', mPersonNo:'sample data', mLastName:'sample data', mFirstName:'sample data', mMiddleInit:'sample data', mAddrLine1:'sample data', mAddrLine2:'sample data', mCity:'sample data', mState:'sample data', mZipCode:'sample data', mHomePhone:'sample data', mBusPhone:'sample data', mConTitle:'sample data', mConTitleText:'sample data', mBirthDate:'sample data', mBirthDateText:'sample data', mGender:'sample data', mGenderText:'sample data', mMaritalSts:'sample data', mMaritalStsText:'sample data', mLangCode:'sample data', mLangCodeText:'sample data', mUserDef1:'sample data', mUserDef2:'sample data', mMedicareNo:'sample data', mMedicaidNo:'sample data', mSocialSecNo:'sample data', mEmployeeNo:'sample data', mMedicalRecNo:'sample data', mAltSubsId:'sample data', mAltPerno:'sample data', mHoldRsn:'sample data', mHoldRsnText:'sample data', mHoldDt:'sample data', mHoldDtText:'sample data', mDepVerSts:'sample data', mDepVerStsText:'sample data', mAkaLastName:'sample data', mAkaFirstName:'sample data', mAkaAddrLine1:'sample data', mAkaAddrLine2:'sample data', mAkaCity:'sample data', mAkaState:'sample data', mAkaZipCode:'sample data', mAkaPhone:'sample data', mRespLastName:'sample data', mRespFirstName:'sample data', mRespAddrLine1:'sample data', mRespAddrLine2:'sample data', mRespCity:'sample data', mRespState:'sample data', mRespZipCode:'sample data', mRespPhone:'sample data', mVerThruDate:'sample data', mVerThruDateText:'sample data', eEffDate:'sample data', eEffDateText:'sample data', eTermDate:'sample data', eTermDateText:'sample data', eTermRsn:'sample data', eTermRsnText:'sample data', eRelatCd:'sample data', eRelatCdText:'sample data', eGrpId:'sample data', eGrpShortName:'sample data', eGrpLongName:'sample data', ePlanCode:'sample data', eLineOfBus:'sample data', eRiderCode1:'sample data', eRiderCode2:'sample data', eRiderCode3:'sample data', eRiderCode4:'sample data', eRiderCode5:'sample data', eRiderCode6:'sample data', eRiderCode7:'sample data', eRiderCode8:'sample data', eMedicareSts:'sample data', eOtherFlag:'sample data', eHireDt:'sample data', eHireDtText:'sample data', eEligStatus:'sample data', ePremStep:'sample data', ePremAmt:'sample data', ePremCode:'sample data', ePcp1Id:'sample data', ePcp1Sname:'sample data', ePcp1Lname:'sample data', ePcp1Fname:'sample data', eIpaId:'sample data', ePanelId:'sample data', ePcp2Id:'sample data', ePcp2Sname:'sample data', ePcp2Lname:'sample data', ePcp2Fname:'sample data', eUserDef1:'sample data', pPromptCode1:'sample data', pPromptCode2:'sample data', pPromptCode3:'sample data', pPromptCode4:'sample data', pPromptCode5:'sample data', pPromptCode6:'sample data', pPromptDate1:'sample data', pPromptDate2:'sample data', pPromptText1:'sample data', pPromptText2:'sample data', aCountry:'sample data', mAkaCountry:'sample data', mRespCountry:'sample data', mCountry:'sample data'},
       {seqLetterDataSource:1234, letterId:'sample data', letterIdSuffix:'sample data', aLastName:'sample data', aFirstName:'sample data', aShortName:'sample data', aAddrLine1:'sample data', aAddrLine2:'sample data', aCity:'sample data', aState:'sample data', aZipCode:'sample data', aPhoneNumber:'sample data', aContactName:'sample data', aContactTitle:'sample data', mSubsId:'sample data', mPersonNo:'sample data', mLastName:'sample data', mFirstName:'sample data', mMiddleInit:'sample data', mAddrLine1:'sample data', mAddrLine2:'sample data', mCity:'sample data', mState:'sample data', mZipCode:'sample data', mHomePhone:'sample data', mBusPhone:'sample data', mConTitle:'sample data', mConTitleText:'sample data', mBirthDate:'sample data', mBirthDateText:'sample data', mGender:'sample data', mGenderText:'sample data', mMaritalSts:'sample data', mMaritalStsText:'sample data', mLangCode:'sample data', mLangCodeText:'sample data', mUserDef1:'sample data', mUserDef2:'sample data', mMedicareNo:'sample data', mMedicaidNo:'sample data', mSocialSecNo:'sample data', mEmployeeNo:'sample data', mMedicalRecNo:'sample data', mAltSubsId:'sample data', mAltPerno:'sample data', mHoldRsn:'sample data', mHoldRsnText:'sample data', mHoldDt:'sample data', mHoldDtText:'sample data', mDepVerSts:'sample data', mDepVerStsText:'sample data', mAkaLastName:'sample data', mAkaFirstName:'sample data', mAkaAddrLine1:'sample data', mAkaAddrLine2:'sample data', mAkaCity:'sample data', mAkaState:'sample data', mAkaZipCode:'sample data', mAkaPhone:'sample data', mRespLastName:'sample data', mRespFirstName:'sample data', mRespAddrLine1:'sample data', mRespAddrLine2:'sample data', mRespCity:'sample data', mRespState:'sample data', mRespZipCode:'sample data', mRespPhone:'sample data', mVerThruDate:'sample data', mVerThruDateText:'sample data', eEffDate:'sample data', eEffDateText:'sample data', eTermDate:'sample data', eTermDateText:'sample data', eTermRsn:'sample data', eTermRsnText:'sample data', eRelatCd:'sample data', eRelatCdText:'sample data', eGrpId:'sample data', eGrpShortName:'sample data', eGrpLongName:'sample data', ePlanCode:'sample data', eLineOfBus:'sample data', eRiderCode1:'sample data', eRiderCode2:'sample data', eRiderCode3:'sample data', eRiderCode4:'sample data', eRiderCode5:'sample data', eRiderCode6:'sample data', eRiderCode7:'sample data', eRiderCode8:'sample data', eMedicareSts:'sample data', eOtherFlag:'sample data', eHireDt:'sample data', eHireDtText:'sample data', eEligStatus:'sample data', ePremStep:'sample data', ePremAmt:'sample data', ePremCode:'sample data', ePcp1Id:'sample data', ePcp1Sname:'sample data', ePcp1Lname:'sample data', ePcp1Fname:'sample data', eIpaId:'sample data', ePanelId:'sample data', ePcp2Id:'sample data', ePcp2Sname:'sample data', ePcp2Lname:'sample data', ePcp2Fname:'sample data', eUserDef1:'sample data', pPromptCode1:'sample data', pPromptCode2:'sample data', pPromptCode3:'sample data', pPromptCode4:'sample data', pPromptCode5:'sample data', pPromptCode6:'sample data', pPromptDate1:'sample data', pPromptDate2:'sample data', pPromptText1:'sample data', pPromptText2:'sample data', aCountry:'sample data', mAkaCountry:'sample data', mRespCountry:'sample data', mCountry:'sample data'},
       {seqLetterDataSource:1234, letterId:'sample data', letterIdSuffix:'sample data', aLastName:'sample data', aFirstName:'sample data', aShortName:'sample data', aAddrLine1:'sample data', aAddrLine2:'sample data', aCity:'sample data', aState:'sample data', aZipCode:'sample data', aPhoneNumber:'sample data', aContactName:'sample data', aContactTitle:'sample data', mSubsId:'sample data', mPersonNo:'sample data', mLastName:'sample data', mFirstName:'sample data', mMiddleInit:'sample data', mAddrLine1:'sample data', mAddrLine2:'sample data', mCity:'sample data', mState:'sample data', mZipCode:'sample data', mHomePhone:'sample data', mBusPhone:'sample data', mConTitle:'sample data', mConTitleText:'sample data', mBirthDate:'sample data', mBirthDateText:'sample data', mGender:'sample data', mGenderText:'sample data', mMaritalSts:'sample data', mMaritalStsText:'sample data', mLangCode:'sample data', mLangCodeText:'sample data', mUserDef1:'sample data', mUserDef2:'sample data', mMedicareNo:'sample data', mMedicaidNo:'sample data', mSocialSecNo:'sample data', mEmployeeNo:'sample data', mMedicalRecNo:'sample data', mAltSubsId:'sample data', mAltPerno:'sample data', mHoldRsn:'sample data', mHoldRsnText:'sample data', mHoldDt:'sample data', mHoldDtText:'sample data', mDepVerSts:'sample data', mDepVerStsText:'sample data', mAkaLastName:'sample data', mAkaFirstName:'sample data', mAkaAddrLine1:'sample data', mAkaAddrLine2:'sample data', mAkaCity:'sample data', mAkaState:'sample data', mAkaZipCode:'sample data', mAkaPhone:'sample data', mRespLastName:'sample data', mRespFirstName:'sample data', mRespAddrLine1:'sample data', mRespAddrLine2:'sample data', mRespCity:'sample data', mRespState:'sample data', mRespZipCode:'sample data', mRespPhone:'sample data', mVerThruDate:'sample data', mVerThruDateText:'sample data', eEffDate:'sample data', eEffDateText:'sample data', eTermDate:'sample data', eTermDateText:'sample data', eTermRsn:'sample data', eTermRsnText:'sample data', eRelatCd:'sample data', eRelatCdText:'sample data', eGrpId:'sample data', eGrpShortName:'sample data', eGrpLongName:'sample data', ePlanCode:'sample data', eLineOfBus:'sample data', eRiderCode1:'sample data', eRiderCode2:'sample data', eRiderCode3:'sample data', eRiderCode4:'sample data', eRiderCode5:'sample data', eRiderCode6:'sample data', eRiderCode7:'sample data', eRiderCode8:'sample data', eMedicareSts:'sample data', eOtherFlag:'sample data', eHireDt:'sample data', eHireDtText:'sample data', eEligStatus:'sample data', ePremStep:'sample data', ePremAmt:'sample data', ePremCode:'sample data', ePcp1Id:'sample data', ePcp1Sname:'sample data', ePcp1Lname:'sample data', ePcp1Fname:'sample data', eIpaId:'sample data', ePanelId:'sample data', ePcp2Id:'sample data', ePcp2Sname:'sample data', ePcp2Lname:'sample data', ePcp2Fname:'sample data', eUserDef1:'sample data', pPromptCode1:'sample data', pPromptCode2:'sample data', pPromptCode3:'sample data', pPromptCode4:'sample data', pPromptCode5:'sample data', pPromptCode6:'sample data', pPromptDate1:'sample data', pPromptDate2:'sample data', pPromptText1:'sample data', pPromptText2:'sample data', aCountry:'sample data', mAkaCountry:'sample data', mRespCountry:'sample data', mCountry:'sample data'}

      ];
      service.getLetterDataSourceMembers().subscribe(users => {
        expect(users.length).toBe(3);
      });

      const req = httpMock.expectOne(`${environment.apiUrl}/letterdatasourcemembers/?use-pagination=false&page=0&size=0`);
      expect(req.request.method).toBe("GET");
      req.flush(letterDataSourceMember);
    });
  });


  describe('#createLetterDataSourceMember', () => {
    var id = 1;
    it('should return an Promise<LetterDataSourceMember>', () => {
      const letterDataSourceMember: LetterDataSourceMember = {seqLetterDataSource:1234, letterId:'sample data', letterIdSuffix:'sample data', aLastName:'sample data', aFirstName:'sample data', aShortName:'sample data', aAddrLine1:'sample data', aAddrLine2:'sample data', aCity:'sample data', aState:'sample data', aZipCode:'sample data', aPhoneNumber:'sample data', aContactName:'sample data', aContactTitle:'sample data', mSubsId:'sample data', mPersonNo:'sample data', mLastName:'sample data', mFirstName:'sample data', mMiddleInit:'sample data', mAddrLine1:'sample data', mAddrLine2:'sample data', mCity:'sample data', mState:'sample data', mZipCode:'sample data', mHomePhone:'sample data', mBusPhone:'sample data', mConTitle:'sample data', mConTitleText:'sample data', mBirthDate:'sample data', mBirthDateText:'sample data', mGender:'sample data', mGenderText:'sample data', mMaritalSts:'sample data', mMaritalStsText:'sample data', mLangCode:'sample data', mLangCodeText:'sample data', mUserDef1:'sample data', mUserDef2:'sample data', mMedicareNo:'sample data', mMedicaidNo:'sample data', mSocialSecNo:'sample data', mEmployeeNo:'sample data', mMedicalRecNo:'sample data', mAltSubsId:'sample data', mAltPerno:'sample data', mHoldRsn:'sample data', mHoldRsnText:'sample data', mHoldDt:'sample data', mHoldDtText:'sample data', mDepVerSts:'sample data', mDepVerStsText:'sample data', mAkaLastName:'sample data', mAkaFirstName:'sample data', mAkaAddrLine1:'sample data', mAkaAddrLine2:'sample data', mAkaCity:'sample data', mAkaState:'sample data', mAkaZipCode:'sample data', mAkaPhone:'sample data', mRespLastName:'sample data', mRespFirstName:'sample data', mRespAddrLine1:'sample data', mRespAddrLine2:'sample data', mRespCity:'sample data', mRespState:'sample data', mRespZipCode:'sample data', mRespPhone:'sample data', mVerThruDate:'sample data', mVerThruDateText:'sample data', eEffDate:'sample data', eEffDateText:'sample data', eTermDate:'sample data', eTermDateText:'sample data', eTermRsn:'sample data', eTermRsnText:'sample data', eRelatCd:'sample data', eRelatCdText:'sample data', eGrpId:'sample data', eGrpShortName:'sample data', eGrpLongName:'sample data', ePlanCode:'sample data', eLineOfBus:'sample data', eRiderCode1:'sample data', eRiderCode2:'sample data', eRiderCode3:'sample data', eRiderCode4:'sample data', eRiderCode5:'sample data', eRiderCode6:'sample data', eRiderCode7:'sample data', eRiderCode8:'sample data', eMedicareSts:'sample data', eOtherFlag:'sample data', eHireDt:'sample data', eHireDtText:'sample data', eEligStatus:'sample data', ePremStep:'sample data', ePremAmt:'sample data', ePremCode:'sample data', ePcp1Id:'sample data', ePcp1Sname:'sample data', ePcp1Lname:'sample data', ePcp1Fname:'sample data', eIpaId:'sample data', ePanelId:'sample data', ePcp2Id:'sample data', ePcp2Sname:'sample data', ePcp2Lname:'sample data', ePcp2Fname:'sample data', eUserDef1:'sample data', pPromptCode1:'sample data', pPromptCode2:'sample data', pPromptCode3:'sample data', pPromptCode4:'sample data', pPromptCode5:'sample data', pPromptCode6:'sample data', pPromptDate1:'sample data', pPromptDate2:'sample data', pPromptText1:'sample data', pPromptText2:'sample data', aCountry:'sample data', mAkaCountry:'sample data', mRespCountry:'sample data', mCountry:'sample data'};
      service.createLetterDataSourceMember(letterDataSourceMember).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/letterdatasourcemembers`);
      expect(req.request.method).toBe("POST");
      req.flush(null, { status: 200, statusText: 'Ok' });

    });
  });


  describe('#updateLetterDataSourceMember', () => {
    var id = 1;
    it('should return an Promise<LetterDataSourceMember>', () => {
      const letterDataSourceMember: LetterDataSourceMember = {seqLetterDataSource:1234, letterId:'sample data', letterIdSuffix:'sample data', aLastName:'sample data', aFirstName:'sample data', aShortName:'sample data', aAddrLine1:'sample data', aAddrLine2:'sample data', aCity:'sample data', aState:'sample data', aZipCode:'sample data', aPhoneNumber:'sample data', aContactName:'sample data', aContactTitle:'sample data', mSubsId:'sample data', mPersonNo:'sample data', mLastName:'sample data', mFirstName:'sample data', mMiddleInit:'sample data', mAddrLine1:'sample data', mAddrLine2:'sample data', mCity:'sample data', mState:'sample data', mZipCode:'sample data', mHomePhone:'sample data', mBusPhone:'sample data', mConTitle:'sample data', mConTitleText:'sample data', mBirthDate:'sample data', mBirthDateText:'sample data', mGender:'sample data', mGenderText:'sample data', mMaritalSts:'sample data', mMaritalStsText:'sample data', mLangCode:'sample data', mLangCodeText:'sample data', mUserDef1:'sample data', mUserDef2:'sample data', mMedicareNo:'sample data', mMedicaidNo:'sample data', mSocialSecNo:'sample data', mEmployeeNo:'sample data', mMedicalRecNo:'sample data', mAltSubsId:'sample data', mAltPerno:'sample data', mHoldRsn:'sample data', mHoldRsnText:'sample data', mHoldDt:'sample data', mHoldDtText:'sample data', mDepVerSts:'sample data', mDepVerStsText:'sample data', mAkaLastName:'sample data', mAkaFirstName:'sample data', mAkaAddrLine1:'sample data', mAkaAddrLine2:'sample data', mAkaCity:'sample data', mAkaState:'sample data', mAkaZipCode:'sample data', mAkaPhone:'sample data', mRespLastName:'sample data', mRespFirstName:'sample data', mRespAddrLine1:'sample data', mRespAddrLine2:'sample data', mRespCity:'sample data', mRespState:'sample data', mRespZipCode:'sample data', mRespPhone:'sample data', mVerThruDate:'sample data', mVerThruDateText:'sample data', eEffDate:'sample data', eEffDateText:'sample data', eTermDate:'sample data', eTermDateText:'sample data', eTermRsn:'sample data', eTermRsnText:'sample data', eRelatCd:'sample data', eRelatCdText:'sample data', eGrpId:'sample data', eGrpShortName:'sample data', eGrpLongName:'sample data', ePlanCode:'sample data', eLineOfBus:'sample data', eRiderCode1:'sample data', eRiderCode2:'sample data', eRiderCode3:'sample data', eRiderCode4:'sample data', eRiderCode5:'sample data', eRiderCode6:'sample data', eRiderCode7:'sample data', eRiderCode8:'sample data', eMedicareSts:'sample data', eOtherFlag:'sample data', eHireDt:'sample data', eHireDtText:'sample data', eEligStatus:'sample data', ePremStep:'sample data', ePremAmt:'sample data', ePremCode:'sample data', ePcp1Id:'sample data', ePcp1Sname:'sample data', ePcp1Lname:'sample data', ePcp1Fname:'sample data', eIpaId:'sample data', ePanelId:'sample data', ePcp2Id:'sample data', ePcp2Sname:'sample data', ePcp2Lname:'sample data', ePcp2Fname:'sample data', eUserDef1:'sample data', pPromptCode1:'sample data', pPromptCode2:'sample data', pPromptCode3:'sample data', pPromptCode4:'sample data', pPromptCode5:'sample data', pPromptCode6:'sample data', pPromptDate1:'sample data', pPromptDate2:'sample data', pPromptText1:'sample data', pPromptText2:'sample data', aCountry:'sample data', mAkaCountry:'sample data', mRespCountry:'sample data', mCountry:'sample data'};
      service.updateLetterDataSourceMember(letterDataSourceMember, id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/letterdatasourcemembers/${id}`);
      expect(req.request.method).toBe("PUT");
      req.flush(null, { status: 200, statusText: 'Ok' });
    });
  });


  describe('#deleteLetterDataSourceMember', () => {
    var id = 1;
    it('should call delete method with correct parameter', () => {
      service.deleteLetterDataSourceMember(id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/letterdatasourcemembers/${id}`);
      expect(req.request.method).toBe("DELETE");
      req.flush(null, { status: 400, statusText: 'Ok' });
    });
  });


});