/* Copyright (c) 2020 . All Rights Reserved. */

import { Injectable } from '@angular/core';
import { By } from '@angular/platform-browser';
import { DebugElement } from '@angular/core';
import { AlertMessageService, AlertMessage } from "../shared/alert-message/index";
import { Router } from '@angular/router'
import { Subject } from 'rxjs/Rx';
import 'rxjs/add/operator/toPromise';
import { async, ComponentFixture, TestBed, inject, getTestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { environment } from '../../environments/environment'
import { RouterTestingModule } from '@angular/router/testing';

import { ProfsvcClaimHeaderService } from './profsvc-claim-header.service';
import { ProfsvcClaimHeader } from '../api-models/profsvc-claim-header.model'
import { ProfsvcClaimHeaders } from "../api-models/testing/fake-profsvc-claim-header.model"

describe('ProfsvcClaimHeaderService', () => {
  let injector: TestBed;
  let service: ProfsvcClaimHeaderService;
  let httpMock: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [ProfsvcClaimHeaderService]
    });
    injector = getTestBed();
    service = injector.get(ProfsvcClaimHeaderService);
    httpMock = injector.get(HttpTestingController);
  });

  afterEach(() => {
      httpMock.verify();
  });
  describe('#getProfsvcClaimHeaders', () => {
    it('should return an Promise<ProfsvcClaimHeader[]>', () => {
      const profsvcClaimHeader = [
       {diagnosis3:'sample data', diagnosis4:'sample data', dateReceived:'2018-01-01', userDefined1:'sample data', userDefined2:'sample data', batchNumber:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', seqProvContract:1234, paySubscriber:'sample data', submittedAuthNumber:1234, submittedSecondaryAuth:'sample data', otherInsuranceInd:'sample data', assignOfBenefits:'sample data', emplRelatedInd:'sample data', accidentInd:'sample data', accidentSymptomDate:'2018-01-01', patControlNo:'sample data', provAssignInd:'sample data', facilityLabIdNo:'sample data', sameSimilarSymptomInd:'sample data', sameSimilarSymptomDate:'2018-01-01', admissionDate1:'2018-01-01', dischargeDate1:'2018-01-01', covProvFlag:'sample data', seqCovProvParent:1234, reimbMethod:'sample data', coveringMethod:'sample data', origSeqProvContract:1234, ocCarrierCode:'sample data', cobAlwdAmtRule:'sample data', cobAlwdAmtRsn:'sample data', authLevel:'sample data', unableToWorkBeginDate:'2018-01-01', unableToWorkThruDate:'2018-01-01', reservedLocalUseHdr:'sample data', outsideLabInd:'sample data', outsideLabCharges:1234, medicaidResubmitCode:'sample data', originalReferenceNumber:'sample data', patientPaidAmount:1234, facilityNumber:'sample data', labNumber:'sample data', autoAccidentIn:'sample data', autoAccidentState:'sample data', releaseMedRecsInd:'sample data', onsetTime:1234, authWaiveMethod:'sample data', seqClaimId:1234, claimNumber:'sample data', primarySvcDate:'2018-01-01', claimThruDate:'2018-01-01', authNumber:1234, secondaryAuth:'sample data', seqMembId:1234, memberAge:1234, memberGender:'sample data', seqPcpId:1234, pcpType:'sample data', pcpSpec:'sample data', pcpIpaId:'sample data', seqGroupId:1234, planCode:'sample data', lineOfBusiness:'sample data', panelId:'sample data', riderString:'sample data', eligibleThruDate:'2018-01-01', eligStatus:'sample data', seqProvId:1234, seqProvAddress:1234, providerParStat:'sample data', providerType:'sample data', providerSpec:'sample data', providerIpaId:'sample data', providerPcpFlag:'sample data', seqRefProvId:1234, refProvType:'sample data', refProvSpec:'sample data', refProvParStat:'sample data', refProvIpaId:'sample data', seqVendId:1234, seqVendAddress:1234, totalBilledAmt:1234, placeOfService1:'sample data', placeOfService2:'sample data', placeOfService3:'sample data', serviceReason1:'sample data', diagnosis1:'sample data', diagnosis2:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', refProvPcp:'sample data', auditStatus:'sample data', authMatchOrder:1234, seqDfltVendId:1234, seqDfltVendAddress:1234, seqPaySubVendId:1234, seqPaySubVendAddrId:1234, acceptMedicareAssignFlag:'sample data', explanationAttached:'sample data', inServiceArea:'sample data', providerPostalCode:'sample data', headerChanged:'sample data', primaryOcExists:'sample data', payDependent:'sample data', invalidDataInd:'sample data', privacyApplies:'sample data', seqMcondId:1234, memberDateOfDeath:'2018-01-01', memberWeightPounds:1234, memberPregnancyInd:'sample data', spinalManipInitTreatment:'2018-01-01', spinalManipConditionCode:'sample data', spinalManipDesc1:'sample data', spinalManipDesc2:'sample data', spinalManipXrayAvailibility:'sample data', footCareLastVisitDate:'2018-01-01', mammographyCertNo:'sample data', epsdtReferral:'sample data', epsdtConditionInd1:'sample data', epsdtConditionInd2:'sample data', epsdtConditionInd3:'sample data', relInfoSign:'sample data', signRendProv:'sample data', diagnosis5:'sample data', diagnosis6:'sample data', diagnosis7:'sample data', diagnosis8:'sample data', claimSubmReasonCode:'sample data', memberState:'sample data'},
       {diagnosis3:'sample data', diagnosis4:'sample data', dateReceived:'2018-01-01', userDefined1:'sample data', userDefined2:'sample data', batchNumber:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', seqProvContract:1234, paySubscriber:'sample data', submittedAuthNumber:1234, submittedSecondaryAuth:'sample data', otherInsuranceInd:'sample data', assignOfBenefits:'sample data', emplRelatedInd:'sample data', accidentInd:'sample data', accidentSymptomDate:'2018-01-01', patControlNo:'sample data', provAssignInd:'sample data', facilityLabIdNo:'sample data', sameSimilarSymptomInd:'sample data', sameSimilarSymptomDate:'2018-01-01', admissionDate1:'2018-01-01', dischargeDate1:'2018-01-01', covProvFlag:'sample data', seqCovProvParent:1234, reimbMethod:'sample data', coveringMethod:'sample data', origSeqProvContract:1234, ocCarrierCode:'sample data', cobAlwdAmtRule:'sample data', cobAlwdAmtRsn:'sample data', authLevel:'sample data', unableToWorkBeginDate:'2018-01-01', unableToWorkThruDate:'2018-01-01', reservedLocalUseHdr:'sample data', outsideLabInd:'sample data', outsideLabCharges:1234, medicaidResubmitCode:'sample data', originalReferenceNumber:'sample data', patientPaidAmount:1234, facilityNumber:'sample data', labNumber:'sample data', autoAccidentIn:'sample data', autoAccidentState:'sample data', releaseMedRecsInd:'sample data', onsetTime:1234, authWaiveMethod:'sample data', seqClaimId:1234, claimNumber:'sample data', primarySvcDate:'2018-01-01', claimThruDate:'2018-01-01', authNumber:1234, secondaryAuth:'sample data', seqMembId:1234, memberAge:1234, memberGender:'sample data', seqPcpId:1234, pcpType:'sample data', pcpSpec:'sample data', pcpIpaId:'sample data', seqGroupId:1234, planCode:'sample data', lineOfBusiness:'sample data', panelId:'sample data', riderString:'sample data', eligibleThruDate:'2018-01-01', eligStatus:'sample data', seqProvId:1234, seqProvAddress:1234, providerParStat:'sample data', providerType:'sample data', providerSpec:'sample data', providerIpaId:'sample data', providerPcpFlag:'sample data', seqRefProvId:1234, refProvType:'sample data', refProvSpec:'sample data', refProvParStat:'sample data', refProvIpaId:'sample data', seqVendId:1234, seqVendAddress:1234, totalBilledAmt:1234, placeOfService1:'sample data', placeOfService2:'sample data', placeOfService3:'sample data', serviceReason1:'sample data', diagnosis1:'sample data', diagnosis2:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', refProvPcp:'sample data', auditStatus:'sample data', authMatchOrder:1234, seqDfltVendId:1234, seqDfltVendAddress:1234, seqPaySubVendId:1234, seqPaySubVendAddrId:1234, acceptMedicareAssignFlag:'sample data', explanationAttached:'sample data', inServiceArea:'sample data', providerPostalCode:'sample data', headerChanged:'sample data', primaryOcExists:'sample data', payDependent:'sample data', invalidDataInd:'sample data', privacyApplies:'sample data', seqMcondId:1234, memberDateOfDeath:'2018-01-01', memberWeightPounds:1234, memberPregnancyInd:'sample data', spinalManipInitTreatment:'2018-01-01', spinalManipConditionCode:'sample data', spinalManipDesc1:'sample data', spinalManipDesc2:'sample data', spinalManipXrayAvailibility:'sample data', footCareLastVisitDate:'2018-01-01', mammographyCertNo:'sample data', epsdtReferral:'sample data', epsdtConditionInd1:'sample data', epsdtConditionInd2:'sample data', epsdtConditionInd3:'sample data', relInfoSign:'sample data', signRendProv:'sample data', diagnosis5:'sample data', diagnosis6:'sample data', diagnosis7:'sample data', diagnosis8:'sample data', claimSubmReasonCode:'sample data', memberState:'sample data'},
       {diagnosis3:'sample data', diagnosis4:'sample data', dateReceived:'2018-01-01', userDefined1:'sample data', userDefined2:'sample data', batchNumber:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', seqProvContract:1234, paySubscriber:'sample data', submittedAuthNumber:1234, submittedSecondaryAuth:'sample data', otherInsuranceInd:'sample data', assignOfBenefits:'sample data', emplRelatedInd:'sample data', accidentInd:'sample data', accidentSymptomDate:'2018-01-01', patControlNo:'sample data', provAssignInd:'sample data', facilityLabIdNo:'sample data', sameSimilarSymptomInd:'sample data', sameSimilarSymptomDate:'2018-01-01', admissionDate1:'2018-01-01', dischargeDate1:'2018-01-01', covProvFlag:'sample data', seqCovProvParent:1234, reimbMethod:'sample data', coveringMethod:'sample data', origSeqProvContract:1234, ocCarrierCode:'sample data', cobAlwdAmtRule:'sample data', cobAlwdAmtRsn:'sample data', authLevel:'sample data', unableToWorkBeginDate:'2018-01-01', unableToWorkThruDate:'2018-01-01', reservedLocalUseHdr:'sample data', outsideLabInd:'sample data', outsideLabCharges:1234, medicaidResubmitCode:'sample data', originalReferenceNumber:'sample data', patientPaidAmount:1234, facilityNumber:'sample data', labNumber:'sample data', autoAccidentIn:'sample data', autoAccidentState:'sample data', releaseMedRecsInd:'sample data', onsetTime:1234, authWaiveMethod:'sample data', seqClaimId:1234, claimNumber:'sample data', primarySvcDate:'2018-01-01', claimThruDate:'2018-01-01', authNumber:1234, secondaryAuth:'sample data', seqMembId:1234, memberAge:1234, memberGender:'sample data', seqPcpId:1234, pcpType:'sample data', pcpSpec:'sample data', pcpIpaId:'sample data', seqGroupId:1234, planCode:'sample data', lineOfBusiness:'sample data', panelId:'sample data', riderString:'sample data', eligibleThruDate:'2018-01-01', eligStatus:'sample data', seqProvId:1234, seqProvAddress:1234, providerParStat:'sample data', providerType:'sample data', providerSpec:'sample data', providerIpaId:'sample data', providerPcpFlag:'sample data', seqRefProvId:1234, refProvType:'sample data', refProvSpec:'sample data', refProvParStat:'sample data', refProvIpaId:'sample data', seqVendId:1234, seqVendAddress:1234, totalBilledAmt:1234, placeOfService1:'sample data', placeOfService2:'sample data', placeOfService3:'sample data', serviceReason1:'sample data', diagnosis1:'sample data', diagnosis2:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', refProvPcp:'sample data', auditStatus:'sample data', authMatchOrder:1234, seqDfltVendId:1234, seqDfltVendAddress:1234, seqPaySubVendId:1234, seqPaySubVendAddrId:1234, acceptMedicareAssignFlag:'sample data', explanationAttached:'sample data', inServiceArea:'sample data', providerPostalCode:'sample data', headerChanged:'sample data', primaryOcExists:'sample data', payDependent:'sample data', invalidDataInd:'sample data', privacyApplies:'sample data', seqMcondId:1234, memberDateOfDeath:'2018-01-01', memberWeightPounds:1234, memberPregnancyInd:'sample data', spinalManipInitTreatment:'2018-01-01', spinalManipConditionCode:'sample data', spinalManipDesc1:'sample data', spinalManipDesc2:'sample data', spinalManipXrayAvailibility:'sample data', footCareLastVisitDate:'2018-01-01', mammographyCertNo:'sample data', epsdtReferral:'sample data', epsdtConditionInd1:'sample data', epsdtConditionInd2:'sample data', epsdtConditionInd3:'sample data', relInfoSign:'sample data', signRendProv:'sample data', diagnosis5:'sample data', diagnosis6:'sample data', diagnosis7:'sample data', diagnosis8:'sample data', claimSubmReasonCode:'sample data', memberState:'sample data'}

      ];
      service.getProfsvcClaimHeaders().subscribe(users => {
        expect(users.length).toBe(3);
      });

      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimheaders/?use-pagination=false&page=0&size=0`);
      expect(req.request.method).toBe("GET");
      req.flush(profsvcClaimHeader);
    });
  });


  describe('#createProfsvcClaimHeader', () => {
    var id = 1;
    it('should return an Promise<ProfsvcClaimHeader>', () => {
      const profsvcClaimHeader: ProfsvcClaimHeader = {diagnosis3:'sample data', diagnosis4:'sample data', dateReceived:'2018-01-01', userDefined1:'sample data', userDefined2:'sample data', batchNumber:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', seqProvContract:1234, paySubscriber:'sample data', submittedAuthNumber:1234, submittedSecondaryAuth:'sample data', otherInsuranceInd:'sample data', assignOfBenefits:'sample data', emplRelatedInd:'sample data', accidentInd:'sample data', accidentSymptomDate:'2018-01-01', patControlNo:'sample data', provAssignInd:'sample data', facilityLabIdNo:'sample data', sameSimilarSymptomInd:'sample data', sameSimilarSymptomDate:'2018-01-01', admissionDate1:'2018-01-01', dischargeDate1:'2018-01-01', covProvFlag:'sample data', seqCovProvParent:1234, reimbMethod:'sample data', coveringMethod:'sample data', origSeqProvContract:1234, ocCarrierCode:'sample data', cobAlwdAmtRule:'sample data', cobAlwdAmtRsn:'sample data', authLevel:'sample data', unableToWorkBeginDate:'2018-01-01', unableToWorkThruDate:'2018-01-01', reservedLocalUseHdr:'sample data', outsideLabInd:'sample data', outsideLabCharges:1234, medicaidResubmitCode:'sample data', originalReferenceNumber:'sample data', patientPaidAmount:1234, facilityNumber:'sample data', labNumber:'sample data', autoAccidentIn:'sample data', autoAccidentState:'sample data', releaseMedRecsInd:'sample data', onsetTime:1234, authWaiveMethod:'sample data', seqClaimId:1234, claimNumber:'sample data', primarySvcDate:'2018-01-01', claimThruDate:'2018-01-01', authNumber:1234, secondaryAuth:'sample data', seqMembId:1234, memberAge:1234, memberGender:'sample data', seqPcpId:1234, pcpType:'sample data', pcpSpec:'sample data', pcpIpaId:'sample data', seqGroupId:1234, planCode:'sample data', lineOfBusiness:'sample data', panelId:'sample data', riderString:'sample data', eligibleThruDate:'2018-01-01', eligStatus:'sample data', seqProvId:1234, seqProvAddress:1234, providerParStat:'sample data', providerType:'sample data', providerSpec:'sample data', providerIpaId:'sample data', providerPcpFlag:'sample data', seqRefProvId:1234, refProvType:'sample data', refProvSpec:'sample data', refProvParStat:'sample data', refProvIpaId:'sample data', seqVendId:1234, seqVendAddress:1234, totalBilledAmt:1234, placeOfService1:'sample data', placeOfService2:'sample data', placeOfService3:'sample data', serviceReason1:'sample data', diagnosis1:'sample data', diagnosis2:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', refProvPcp:'sample data', auditStatus:'sample data', authMatchOrder:1234, seqDfltVendId:1234, seqDfltVendAddress:1234, seqPaySubVendId:1234, seqPaySubVendAddrId:1234, acceptMedicareAssignFlag:'sample data', explanationAttached:'sample data', inServiceArea:'sample data', providerPostalCode:'sample data', headerChanged:'sample data', primaryOcExists:'sample data', payDependent:'sample data', invalidDataInd:'sample data', privacyApplies:'sample data', seqMcondId:1234, memberDateOfDeath:'2018-01-01', memberWeightPounds:1234, memberPregnancyInd:'sample data', spinalManipInitTreatment:'2018-01-01', spinalManipConditionCode:'sample data', spinalManipDesc1:'sample data', spinalManipDesc2:'sample data', spinalManipXrayAvailibility:'sample data', footCareLastVisitDate:'2018-01-01', mammographyCertNo:'sample data', epsdtReferral:'sample data', epsdtConditionInd1:'sample data', epsdtConditionInd2:'sample data', epsdtConditionInd3:'sample data', relInfoSign:'sample data', signRendProv:'sample data', diagnosis5:'sample data', diagnosis6:'sample data', diagnosis7:'sample data', diagnosis8:'sample data', claimSubmReasonCode:'sample data', memberState:'sample data'};
      service.createProfsvcClaimHeader(profsvcClaimHeader).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimheaders`);
      expect(req.request.method).toBe("POST");
      req.flush(null, { status: 200, statusText: 'Ok' });

    });
  });


  describe('#updateProfsvcClaimHeader', () => {
    var id = 1;
    it('should return an Promise<ProfsvcClaimHeader>', () => {
      const profsvcClaimHeader: ProfsvcClaimHeader = {diagnosis3:'sample data', diagnosis4:'sample data', dateReceived:'2018-01-01', userDefined1:'sample data', userDefined2:'sample data', batchNumber:'sample data', securityCode:'sample data', insertDatetime:'2018-01-01', insertUser:'sample data', insertProcess:'sample data', updateDatetime:'2018-01-01', updateUser:'sample data', updateProcess:'sample data', seqProvContract:1234, paySubscriber:'sample data', submittedAuthNumber:1234, submittedSecondaryAuth:'sample data', otherInsuranceInd:'sample data', assignOfBenefits:'sample data', emplRelatedInd:'sample data', accidentInd:'sample data', accidentSymptomDate:'2018-01-01', patControlNo:'sample data', provAssignInd:'sample data', facilityLabIdNo:'sample data', sameSimilarSymptomInd:'sample data', sameSimilarSymptomDate:'2018-01-01', admissionDate1:'2018-01-01', dischargeDate1:'2018-01-01', covProvFlag:'sample data', seqCovProvParent:1234, reimbMethod:'sample data', coveringMethod:'sample data', origSeqProvContract:1234, ocCarrierCode:'sample data', cobAlwdAmtRule:'sample data', cobAlwdAmtRsn:'sample data', authLevel:'sample data', unableToWorkBeginDate:'2018-01-01', unableToWorkThruDate:'2018-01-01', reservedLocalUseHdr:'sample data', outsideLabInd:'sample data', outsideLabCharges:1234, medicaidResubmitCode:'sample data', originalReferenceNumber:'sample data', patientPaidAmount:1234, facilityNumber:'sample data', labNumber:'sample data', autoAccidentIn:'sample data', autoAccidentState:'sample data', releaseMedRecsInd:'sample data', onsetTime:1234, authWaiveMethod:'sample data', seqClaimId:1234, claimNumber:'sample data', primarySvcDate:'2018-01-01', claimThruDate:'2018-01-01', authNumber:1234, secondaryAuth:'sample data', seqMembId:1234, memberAge:1234, memberGender:'sample data', seqPcpId:1234, pcpType:'sample data', pcpSpec:'sample data', pcpIpaId:'sample data', seqGroupId:1234, planCode:'sample data', lineOfBusiness:'sample data', panelId:'sample data', riderString:'sample data', eligibleThruDate:'2018-01-01', eligStatus:'sample data', seqProvId:1234, seqProvAddress:1234, providerParStat:'sample data', providerType:'sample data', providerSpec:'sample data', providerIpaId:'sample data', providerPcpFlag:'sample data', seqRefProvId:1234, refProvType:'sample data', refProvSpec:'sample data', refProvParStat:'sample data', refProvIpaId:'sample data', seqVendId:1234, seqVendAddress:1234, totalBilledAmt:1234, placeOfService1:'sample data', placeOfService2:'sample data', placeOfService3:'sample data', serviceReason1:'sample data', diagnosis1:'sample data', diagnosis2:'sample data', providerPanel:'sample data', providerIpa:'sample data', authClass:'sample data', refProvPcp:'sample data', auditStatus:'sample data', authMatchOrder:1234, seqDfltVendId:1234, seqDfltVendAddress:1234, seqPaySubVendId:1234, seqPaySubVendAddrId:1234, acceptMedicareAssignFlag:'sample data', explanationAttached:'sample data', inServiceArea:'sample data', providerPostalCode:'sample data', headerChanged:'sample data', primaryOcExists:'sample data', payDependent:'sample data', invalidDataInd:'sample data', privacyApplies:'sample data', seqMcondId:1234, memberDateOfDeath:'2018-01-01', memberWeightPounds:1234, memberPregnancyInd:'sample data', spinalManipInitTreatment:'2018-01-01', spinalManipConditionCode:'sample data', spinalManipDesc1:'sample data', spinalManipDesc2:'sample data', spinalManipXrayAvailibility:'sample data', footCareLastVisitDate:'2018-01-01', mammographyCertNo:'sample data', epsdtReferral:'sample data', epsdtConditionInd1:'sample data', epsdtConditionInd2:'sample data', epsdtConditionInd3:'sample data', relInfoSign:'sample data', signRendProv:'sample data', diagnosis5:'sample data', diagnosis6:'sample data', diagnosis7:'sample data', diagnosis8:'sample data', claimSubmReasonCode:'sample data', memberState:'sample data'};
      service.updateProfsvcClaimHeader(profsvcClaimHeader, id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimheaders/${id}`);
      expect(req.request.method).toBe("PUT");
      req.flush(null, { status: 200, statusText: 'Ok' });
    });
  });


  describe('#deleteProfsvcClaimHeader', () => {
    var id = 1;
    it('should call delete method with correct parameter', () => {
      service.deleteProfsvcClaimHeader(id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimheaders/${id}`);
      expect(req.request.method).toBe("DELETE");
      req.flush(null, { status: 400, statusText: 'Ok' });
    });
  });


});