/* Copyright (c) 2021 . All Rights Reserved. */

import { Injectable } from '@angular/core';
import { By } from '@angular/platform-browser';
import { DebugElement } from '@angular/core';
import { AlertMessageService, AlertMessage } from "../shared/alert-message/index";
import { Router } from '@angular/router'
import { Subject } from 'rxjs/Rx';
import 'rxjs/add/operator/toPromise';
import { async, ComponentFixture, TestBed, inject, getTestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { environment } from '../../environments/environment'
import { RouterTestingModule } from '@angular/router/testing';

import { ProfsvcClaimDetailService } from './profsvc-claim-detail.service';
import { ProfsvcClaimDetail } from '../api-models/profsvc-claim-detail.model'
import { ProfsvcClaimDetails } from "../api-models/testing/fake-profsvc-claim-detail.model"

describe('ProfsvcClaimDetailService', () => {
  let injector: TestBed;
  let service: ProfsvcClaimDetailService;
  let httpMock: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [ProfsvcClaimDetailService]
    });
    injector = getTestBed();
    service = injector.get(ProfsvcClaimDetailService);
    httpMock = injector.get(HttpTestingController);
  });

  afterEach(() => {
      httpMock.verify();
  });
  describe('#getProfsvcClaimDetails', () => {
    it('should return an Promise<ProfsvcClaimDetail[]>', () => {
      const profsvcClaimDetail = [
       {seqMcondId:1234, adminFeeExists:'sample data', evalForAdminFee:'sample data', penUncleanDays:1234, intPenDscRsn:'sample data', penaltyAmt:1234, geoZipRegion:'sample data', providerLineItemControlNo:'sample data', spinalManipInitTreatmentDt:'2018-01-01', purchasedSvcChargeAmt:1234, purchasedSvcChargeProvId:'sample data', mammographyCertNo:'sample data', latestCreatineTestDate:'2018-01-01', latestHemoTestDate:'2018-01-01', dateLatestVisit:'2018-01-01', dmeRentalFrequency:'sample data', dmePurchasePrice:1234, dmeRentalPrice:1234, dmeQuantity:1234, dmeProcedureCode:'sample data', seqCdaplDtl:1234, authPrice:1234, authProcCodeUsed:'sample data', seqTfrulId:1234, seqRuleId:1234, intDscntAdjReason:'sample data', paidNetAmt:1234, deductUncleanDays:1234, uncleanDays:1234, uncleanFlag:'sample data', interestResetDate:'2018-01-01', interestInquiryDate:'2018-01-01', discountAmt:1234, interestAmt:1234, multModAllowedFactor:1234, allowedFactor2:1234, familyPlanningIndicator:'sample data', epsdt:'sample data', withholdSurplus:1234, bmaReason:'sample data', bmaAmount:1234, printFlagChangeInd:'sample data', capFundRunMonth:'2018-01-01', capFundSubModelId:'sample data', capFundModelId:'sample data', totalUnits:1234, capFundStatus:1234, capFundDateOverrideFlag:'sample data', capFundWithholdAmt:1234, auditStatus:'sample data', reservedLocalUseDet:'sample data', cobIndicator:'sample data', emergencyServicesInd:'sample data', epsdtFamilyPlanningInd:'sample data', placeOfService:'sample data', adjudDate:'2018-01-01', cobPatLiabCvrgAmt:1234, fullCvrgAmt:1234, ocAllowedAmt:1234, primaryPaidAmount:1234, hcpcsModifier4:'sample data', hcpcsModifier3:'sample data', hcpcsModifier2:'sample data', hcpcsModifier1:'sample data', diagCodePointer4:'sample data', diagCodePointer3:'sample data', diagCodePointer2:'sample data', diagCodePointer1:'sample data', svcToDate:'2018-01-01', typeOfService:'sample data', updateProcess:'sample data', updateUser:'sample data', updateDatetime:'2018-01-01', insertProcess:'sample data', insertUser:'sample data', insertDatetime:'2018-01-01', securityCode:'sample data', anesTotalTime:1234, anesEndTime:1234, anesStartTime:1234, hiddenUserDef2:1234, hiddenUserDef1:'sample data', seqAuthDetail:1234, seqApTrans:1234, raId:'sample data', eobId:'sample data', printFlag:'sample data', glRefCode:'sample data', companyCode:'sample data', checkDate:'2018-01-01', postDate:'2018-01-01', medDefCode:'sample data', adjudicationMethod:'sample data', processingStatus:'sample data', claimStatus:'sample data', holdReason3:'sample data', holdReason2:'sample data', holdReason1:'sample data', otherCarrierRsn:'sample data', adjustmentReason:'sample data', deductibleReason:'sample data', copay2Reason:'sample data', copay1Reason:'sample data', notCoveredReason:'sample data', allowedReason:'sample data', netAmt:1234, withholdAmt:1234, otherCarrierAmt:1234, deductibleAmt:1234, copayment2Amt:1234, copayment1Amt:1234, notCoveredAmt:1234, allowedAmt:1234, allowedFactor:1234, billedAmt:1234, quantity:1234, procedureModifier:'sample data', procedureCode:'sample data', billedAllowedAmt:1234, billedModifier:'sample data', billedProcedure:'sample data', seqMembId:1234, seqProvId:1234, placeServPointer:1234, diagnosisPointer:1234, detailSvcDate:'2018-01-01', subLineCode:'sample data', lineNumber:1234, seqClaimId:1234},
       {seqMcondId:1234, adminFeeExists:'sample data', evalForAdminFee:'sample data', penUncleanDays:1234, intPenDscRsn:'sample data', penaltyAmt:1234, geoZipRegion:'sample data', providerLineItemControlNo:'sample data', spinalManipInitTreatmentDt:'2018-01-01', purchasedSvcChargeAmt:1234, purchasedSvcChargeProvId:'sample data', mammographyCertNo:'sample data', latestCreatineTestDate:'2018-01-01', latestHemoTestDate:'2018-01-01', dateLatestVisit:'2018-01-01', dmeRentalFrequency:'sample data', dmePurchasePrice:1234, dmeRentalPrice:1234, dmeQuantity:1234, dmeProcedureCode:'sample data', seqCdaplDtl:1234, authPrice:1234, authProcCodeUsed:'sample data', seqTfrulId:1234, seqRuleId:1234, intDscntAdjReason:'sample data', paidNetAmt:1234, deductUncleanDays:1234, uncleanDays:1234, uncleanFlag:'sample data', interestResetDate:'2018-01-01', interestInquiryDate:'2018-01-01', discountAmt:1234, interestAmt:1234, multModAllowedFactor:1234, allowedFactor2:1234, familyPlanningIndicator:'sample data', epsdt:'sample data', withholdSurplus:1234, bmaReason:'sample data', bmaAmount:1234, printFlagChangeInd:'sample data', capFundRunMonth:'2018-01-01', capFundSubModelId:'sample data', capFundModelId:'sample data', totalUnits:1234, capFundStatus:1234, capFundDateOverrideFlag:'sample data', capFundWithholdAmt:1234, auditStatus:'sample data', reservedLocalUseDet:'sample data', cobIndicator:'sample data', emergencyServicesInd:'sample data', epsdtFamilyPlanningInd:'sample data', placeOfService:'sample data', adjudDate:'2018-01-01', cobPatLiabCvrgAmt:1234, fullCvrgAmt:1234, ocAllowedAmt:1234, primaryPaidAmount:1234, hcpcsModifier4:'sample data', hcpcsModifier3:'sample data', hcpcsModifier2:'sample data', hcpcsModifier1:'sample data', diagCodePointer4:'sample data', diagCodePointer3:'sample data', diagCodePointer2:'sample data', diagCodePointer1:'sample data', svcToDate:'2018-01-01', typeOfService:'sample data', updateProcess:'sample data', updateUser:'sample data', updateDatetime:'2018-01-01', insertProcess:'sample data', insertUser:'sample data', insertDatetime:'2018-01-01', securityCode:'sample data', anesTotalTime:1234, anesEndTime:1234, anesStartTime:1234, hiddenUserDef2:1234, hiddenUserDef1:'sample data', seqAuthDetail:1234, seqApTrans:1234, raId:'sample data', eobId:'sample data', printFlag:'sample data', glRefCode:'sample data', companyCode:'sample data', checkDate:'2018-01-01', postDate:'2018-01-01', medDefCode:'sample data', adjudicationMethod:'sample data', processingStatus:'sample data', claimStatus:'sample data', holdReason3:'sample data', holdReason2:'sample data', holdReason1:'sample data', otherCarrierRsn:'sample data', adjustmentReason:'sample data', deductibleReason:'sample data', copay2Reason:'sample data', copay1Reason:'sample data', notCoveredReason:'sample data', allowedReason:'sample data', netAmt:1234, withholdAmt:1234, otherCarrierAmt:1234, deductibleAmt:1234, copayment2Amt:1234, copayment1Amt:1234, notCoveredAmt:1234, allowedAmt:1234, allowedFactor:1234, billedAmt:1234, quantity:1234, procedureModifier:'sample data', procedureCode:'sample data', billedAllowedAmt:1234, billedModifier:'sample data', billedProcedure:'sample data', seqMembId:1234, seqProvId:1234, placeServPointer:1234, diagnosisPointer:1234, detailSvcDate:'2018-01-01', subLineCode:'sample data', lineNumber:1234, seqClaimId:1234},
       {seqMcondId:1234, adminFeeExists:'sample data', evalForAdminFee:'sample data', penUncleanDays:1234, intPenDscRsn:'sample data', penaltyAmt:1234, geoZipRegion:'sample data', providerLineItemControlNo:'sample data', spinalManipInitTreatmentDt:'2018-01-01', purchasedSvcChargeAmt:1234, purchasedSvcChargeProvId:'sample data', mammographyCertNo:'sample data', latestCreatineTestDate:'2018-01-01', latestHemoTestDate:'2018-01-01', dateLatestVisit:'2018-01-01', dmeRentalFrequency:'sample data', dmePurchasePrice:1234, dmeRentalPrice:1234, dmeQuantity:1234, dmeProcedureCode:'sample data', seqCdaplDtl:1234, authPrice:1234, authProcCodeUsed:'sample data', seqTfrulId:1234, seqRuleId:1234, intDscntAdjReason:'sample data', paidNetAmt:1234, deductUncleanDays:1234, uncleanDays:1234, uncleanFlag:'sample data', interestResetDate:'2018-01-01', interestInquiryDate:'2018-01-01', discountAmt:1234, interestAmt:1234, multModAllowedFactor:1234, allowedFactor2:1234, familyPlanningIndicator:'sample data', epsdt:'sample data', withholdSurplus:1234, bmaReason:'sample data', bmaAmount:1234, printFlagChangeInd:'sample data', capFundRunMonth:'2018-01-01', capFundSubModelId:'sample data', capFundModelId:'sample data', totalUnits:1234, capFundStatus:1234, capFundDateOverrideFlag:'sample data', capFundWithholdAmt:1234, auditStatus:'sample data', reservedLocalUseDet:'sample data', cobIndicator:'sample data', emergencyServicesInd:'sample data', epsdtFamilyPlanningInd:'sample data', placeOfService:'sample data', adjudDate:'2018-01-01', cobPatLiabCvrgAmt:1234, fullCvrgAmt:1234, ocAllowedAmt:1234, primaryPaidAmount:1234, hcpcsModifier4:'sample data', hcpcsModifier3:'sample data', hcpcsModifier2:'sample data', hcpcsModifier1:'sample data', diagCodePointer4:'sample data', diagCodePointer3:'sample data', diagCodePointer2:'sample data', diagCodePointer1:'sample data', svcToDate:'2018-01-01', typeOfService:'sample data', updateProcess:'sample data', updateUser:'sample data', updateDatetime:'2018-01-01', insertProcess:'sample data', insertUser:'sample data', insertDatetime:'2018-01-01', securityCode:'sample data', anesTotalTime:1234, anesEndTime:1234, anesStartTime:1234, hiddenUserDef2:1234, hiddenUserDef1:'sample data', seqAuthDetail:1234, seqApTrans:1234, raId:'sample data', eobId:'sample data', printFlag:'sample data', glRefCode:'sample data', companyCode:'sample data', checkDate:'2018-01-01', postDate:'2018-01-01', medDefCode:'sample data', adjudicationMethod:'sample data', processingStatus:'sample data', claimStatus:'sample data', holdReason3:'sample data', holdReason2:'sample data', holdReason1:'sample data', otherCarrierRsn:'sample data', adjustmentReason:'sample data', deductibleReason:'sample data', copay2Reason:'sample data', copay1Reason:'sample data', notCoveredReason:'sample data', allowedReason:'sample data', netAmt:1234, withholdAmt:1234, otherCarrierAmt:1234, deductibleAmt:1234, copayment2Amt:1234, copayment1Amt:1234, notCoveredAmt:1234, allowedAmt:1234, allowedFactor:1234, billedAmt:1234, quantity:1234, procedureModifier:'sample data', procedureCode:'sample data', billedAllowedAmt:1234, billedModifier:'sample data', billedProcedure:'sample data', seqMembId:1234, seqProvId:1234, placeServPointer:1234, diagnosisPointer:1234, detailSvcDate:'2018-01-01', subLineCode:'sample data', lineNumber:1234, seqClaimId:1234}

      ];
      service.getProfsvcClaimDetails().subscribe(users => {
        expect(users.length).toBe(3);
      });

      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimdetails/?use-pagination=false&page=0&size=0`);
      expect(req.request.method).toBe("GET");
      req.flush(profsvcClaimDetail);
    });
  });


  describe('#createProfsvcClaimDetail', () => {
    var id = 1;
    it('should return an Promise<ProfsvcClaimDetail>', () => {
      const profsvcClaimDetail: ProfsvcClaimDetail = {seqMcondId:1234, adminFeeExists:'sample data', evalForAdminFee:'sample data', penUncleanDays:1234, intPenDscRsn:'sample data', penaltyAmt:1234, geoZipRegion:'sample data', providerLineItemControlNo:'sample data', spinalManipInitTreatmentDt:'2018-01-01', purchasedSvcChargeAmt:1234, purchasedSvcChargeProvId:'sample data', mammographyCertNo:'sample data', latestCreatineTestDate:'2018-01-01', latestHemoTestDate:'2018-01-01', dateLatestVisit:'2018-01-01', dmeRentalFrequency:'sample data', dmePurchasePrice:1234, dmeRentalPrice:1234, dmeQuantity:1234, dmeProcedureCode:'sample data', seqCdaplDtl:1234, authPrice:1234, authProcCodeUsed:'sample data', seqTfrulId:1234, seqRuleId:1234, intDscntAdjReason:'sample data', paidNetAmt:1234, deductUncleanDays:1234, uncleanDays:1234, uncleanFlag:'sample data', interestResetDate:'2018-01-01', interestInquiryDate:'2018-01-01', discountAmt:1234, interestAmt:1234, multModAllowedFactor:1234, allowedFactor2:1234, familyPlanningIndicator:'sample data', epsdt:'sample data', withholdSurplus:1234, bmaReason:'sample data', bmaAmount:1234, printFlagChangeInd:'sample data', capFundRunMonth:'2018-01-01', capFundSubModelId:'sample data', capFundModelId:'sample data', totalUnits:1234, capFundStatus:1234, capFundDateOverrideFlag:'sample data', capFundWithholdAmt:1234, auditStatus:'sample data', reservedLocalUseDet:'sample data', cobIndicator:'sample data', emergencyServicesInd:'sample data', epsdtFamilyPlanningInd:'sample data', placeOfService:'sample data', adjudDate:'2018-01-01', cobPatLiabCvrgAmt:1234, fullCvrgAmt:1234, ocAllowedAmt:1234, primaryPaidAmount:1234, hcpcsModifier4:'sample data', hcpcsModifier3:'sample data', hcpcsModifier2:'sample data', hcpcsModifier1:'sample data', diagCodePointer4:'sample data', diagCodePointer3:'sample data', diagCodePointer2:'sample data', diagCodePointer1:'sample data', svcToDate:'2018-01-01', typeOfService:'sample data', updateProcess:'sample data', updateUser:'sample data', updateDatetime:'2018-01-01', insertProcess:'sample data', insertUser:'sample data', insertDatetime:'2018-01-01', securityCode:'sample data', anesTotalTime:1234, anesEndTime:1234, anesStartTime:1234, hiddenUserDef2:1234, hiddenUserDef1:'sample data', seqAuthDetail:1234, seqApTrans:1234, raId:'sample data', eobId:'sample data', printFlag:'sample data', glRefCode:'sample data', companyCode:'sample data', checkDate:'2018-01-01', postDate:'2018-01-01', medDefCode:'sample data', adjudicationMethod:'sample data', processingStatus:'sample data', claimStatus:'sample data', holdReason3:'sample data', holdReason2:'sample data', holdReason1:'sample data', otherCarrierRsn:'sample data', adjustmentReason:'sample data', deductibleReason:'sample data', copay2Reason:'sample data', copay1Reason:'sample data', notCoveredReason:'sample data', allowedReason:'sample data', netAmt:1234, withholdAmt:1234, otherCarrierAmt:1234, deductibleAmt:1234, copayment2Amt:1234, copayment1Amt:1234, notCoveredAmt:1234, allowedAmt:1234, allowedFactor:1234, billedAmt:1234, quantity:1234, procedureModifier:'sample data', procedureCode:'sample data', billedAllowedAmt:1234, billedModifier:'sample data', billedProcedure:'sample data', seqMembId:1234, seqProvId:1234, placeServPointer:1234, diagnosisPointer:1234, detailSvcDate:'2018-01-01', subLineCode:'sample data', lineNumber:1234, seqClaimId:1234};
      service.createProfsvcClaimDetail(profsvcClaimDetail).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimdetails`);
      expect(req.request.method).toBe("POST");
      req.flush(null, { status: 200, statusText: 'Ok' });

    });
  });


  describe('#updateProfsvcClaimDetail', () => {
    var id = 1;
    it('should return an Promise<ProfsvcClaimDetail>', () => {
      const profsvcClaimDetail: ProfsvcClaimDetail = {seqMcondId:1234, adminFeeExists:'sample data', evalForAdminFee:'sample data', penUncleanDays:1234, intPenDscRsn:'sample data', penaltyAmt:1234, geoZipRegion:'sample data', providerLineItemControlNo:'sample data', spinalManipInitTreatmentDt:'2018-01-01', purchasedSvcChargeAmt:1234, purchasedSvcChargeProvId:'sample data', mammographyCertNo:'sample data', latestCreatineTestDate:'2018-01-01', latestHemoTestDate:'2018-01-01', dateLatestVisit:'2018-01-01', dmeRentalFrequency:'sample data', dmePurchasePrice:1234, dmeRentalPrice:1234, dmeQuantity:1234, dmeProcedureCode:'sample data', seqCdaplDtl:1234, authPrice:1234, authProcCodeUsed:'sample data', seqTfrulId:1234, seqRuleId:1234, intDscntAdjReason:'sample data', paidNetAmt:1234, deductUncleanDays:1234, uncleanDays:1234, uncleanFlag:'sample data', interestResetDate:'2018-01-01', interestInquiryDate:'2018-01-01', discountAmt:1234, interestAmt:1234, multModAllowedFactor:1234, allowedFactor2:1234, familyPlanningIndicator:'sample data', epsdt:'sample data', withholdSurplus:1234, bmaReason:'sample data', bmaAmount:1234, printFlagChangeInd:'sample data', capFundRunMonth:'2018-01-01', capFundSubModelId:'sample data', capFundModelId:'sample data', totalUnits:1234, capFundStatus:1234, capFundDateOverrideFlag:'sample data', capFundWithholdAmt:1234, auditStatus:'sample data', reservedLocalUseDet:'sample data', cobIndicator:'sample data', emergencyServicesInd:'sample data', epsdtFamilyPlanningInd:'sample data', placeOfService:'sample data', adjudDate:'2018-01-01', cobPatLiabCvrgAmt:1234, fullCvrgAmt:1234, ocAllowedAmt:1234, primaryPaidAmount:1234, hcpcsModifier4:'sample data', hcpcsModifier3:'sample data', hcpcsModifier2:'sample data', hcpcsModifier1:'sample data', diagCodePointer4:'sample data', diagCodePointer3:'sample data', diagCodePointer2:'sample data', diagCodePointer1:'sample data', svcToDate:'2018-01-01', typeOfService:'sample data', updateProcess:'sample data', updateUser:'sample data', updateDatetime:'2018-01-01', insertProcess:'sample data', insertUser:'sample data', insertDatetime:'2018-01-01', securityCode:'sample data', anesTotalTime:1234, anesEndTime:1234, anesStartTime:1234, hiddenUserDef2:1234, hiddenUserDef1:'sample data', seqAuthDetail:1234, seqApTrans:1234, raId:'sample data', eobId:'sample data', printFlag:'sample data', glRefCode:'sample data', companyCode:'sample data', checkDate:'2018-01-01', postDate:'2018-01-01', medDefCode:'sample data', adjudicationMethod:'sample data', processingStatus:'sample data', claimStatus:'sample data', holdReason3:'sample data', holdReason2:'sample data', holdReason1:'sample data', otherCarrierRsn:'sample data', adjustmentReason:'sample data', deductibleReason:'sample data', copay2Reason:'sample data', copay1Reason:'sample data', notCoveredReason:'sample data', allowedReason:'sample data', netAmt:1234, withholdAmt:1234, otherCarrierAmt:1234, deductibleAmt:1234, copayment2Amt:1234, copayment1Amt:1234, notCoveredAmt:1234, allowedAmt:1234, allowedFactor:1234, billedAmt:1234, quantity:1234, procedureModifier:'sample data', procedureCode:'sample data', billedAllowedAmt:1234, billedModifier:'sample data', billedProcedure:'sample data', seqMembId:1234, seqProvId:1234, placeServPointer:1234, diagnosisPointer:1234, detailSvcDate:'2018-01-01', subLineCode:'sample data', lineNumber:1234, seqClaimId:1234};
      service.updateProfsvcClaimDetail(profsvcClaimDetail, id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimdetails/${id}`);
      expect(req.request.method).toBe("PUT");
      req.flush(null, { status: 200, statusText: 'Ok' });
    });
  });


  describe('#deleteProfsvcClaimDetail', () => {
    var id = 1;
    it('should call delete method with correct parameter', () => {
      service.deleteProfsvcClaimDetail(id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/profsvcclaimdetails/${id}`);
      expect(req.request.method).toBe("DELETE");
      req.flush(null, { status: 400, statusText: 'Ok' });
    });
  });


});