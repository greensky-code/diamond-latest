/* Copyright (c) 2021 . All Rights Reserved. */

import { Injectable } from '@angular/core';
import { By } from '@angular/platform-browser';
import { DebugElement } from '@angular/core';
import { AlertMessageService, AlertMessage } from "../shared/alert-message/index";
import { Router } from '@angular/router'
import { Subject } from 'rxjs/Rx';
import 'rxjs/add/operator/toPromise';
import { async, ComponentFixture, TestBed, inject, getTestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { environment } from '../../environments/environment'
import { RouterTestingModule } from '@angular/router/testing';

import { MemberEdiEligWorkService } from './member-edi-elig-work.service';
import { MemberEdiEligWork } from '../api-models/member-edi-elig-work.model'
import { MemberEdiEligWorks } from "../api-models/testing/fake-member-edi-elig-work.model"

describe('MemberEdiEligWorkService', () => {
  let injector: TestBed;
  let service: MemberEdiEligWorkService;
  let httpMock: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [MemberEdiEligWorkService]
    });
    injector = getTestBed();
    service = injector.get(MemberEdiEligWorkService);
    httpMock = injector.get(HttpTestingController);
  });

  afterEach(() => {
      httpMock.verify();
  });
  describe('#getMemberEdiEligWorks', () => {
    it('should return an Promise<MemberEdiEligWork[]>', () => {
      const memberEdiEligWork = [
       {riderCode20:'sample data', riderCode19:'sample data', riderCode18:'sample data', riderCode17:'sample data', riderCode16:'sample data', riderCode15:'sample data', riderCode14:'sample data', riderCode13:'sample data', riderCode12:'sample data', riderCode11:'sample data', riderCode10:'sample data', riderCode9:'sample data', rateType:'sample data', eligUserDefined3:'sample data', eligUserDefined2:'sample data', userDate20:'2018-01-01', userDate19:'2018-01-01', userDate18:'2018-01-01', userDate17:'2018-01-01', userDate16:'2018-01-01', userDate15:'2018-01-01', userDate14:'2018-01-01', userDate13:'2018-01-01', userDate12:'2018-01-01', userDate11:'2018-01-01', userDate10:'2018-01-01', userDate9:'2018-01-01', userDate8:'2018-01-01', userDate7:'2018-01-01', userDate6:'2018-01-01', userDate5:'2018-01-01', userDate4:'2018-01-01', userDate3:'2018-01-01', userDate2:'2018-01-01', userDate1:'2018-01-01', userDefined22:'sample data', userDefined21:'sample data', userDefined20:'sample data', userDefined19:'sample data', userDefined18:'sample data', userDefined17:'sample data', userDefined16:'sample data', userDefined15:'sample data', userDefined14:'sample data', userDefined13:'sample data', userDefined12:'sample data', userDefined11:'sample data', userDefined10:'sample data', userDefined9:'sample data', userDefined8:'sample data', userDefined7:'sample data', userDefined6:'sample data', userDefined5:'sample data', userDefined4:'sample data', userDefined3:'sample data', employmentStatusCode:'sample data', diamondId:'sample data', useEftFlg:'sample data', subscLocation:'sample data', subscDept:'sample data', paidThruDate:'2018-01-01', billedThruDate:'2018-01-01', billEffectiveFromDate:'2018-01-01', benefitStartDate:'2018-01-01', pecWaived:'sample data', reasonCode:'sample data', pecEndDate:'2018-01-01', country:'sample data', respCountry:'sample data', akaCountry:'sample data', salary:1234, memberSearchOldValue:'sample data', memberSearchIdentifier:'sample data', eligUserDefined1:'sample data', seqMembId:1234, provider2Id:'sample data', panelId:'sample data', ipaId:'sample data', provider1Id:'sample data', premOverrideCode:'sample data', premOverrideAmt:1234, premOverrideStep:1234, eligStatus:'sample data', hireDate:'2018-01-01', otherStatusFlag:'sample data', medicareStatusFlg:'sample data', riderCode8:'sample data', riderCode7:'sample data', riderCode6:'sample data', riderCode5:'sample data', riderCode4:'sample data', riderCode3:'sample data', riderCode2:'sample data', riderCode1:'sample data', lineOfBusiness:'sample data', planCode:'sample data', groupId:'sample data', relationshipCode:'sample data', termReason:'sample data', termDate:'2018-01-01', effectiveDate:'2018-01-01', verfiedThruDate:'2018-01-01', respPhoneNumber:'sample data', respZipCode:'sample data', respState:'sample data', respCity:'sample data', respAddressLine2:'sample data', respAddressLine1:'sample data', respFirstName:'sample data', respLastName:'sample data', akaPhoneNumber:'sample data', akaZipCode:'sample data', akaState:'sample data', akaCity:'sample data', akaAddressLine2:'sample data', akaAddressLine1:'sample data', akaFirstName:'sample data', akaLastName:'sample data', depVerifStatus:'sample data', holdDate:'2018-01-01', holdReason:'sample data', altPersonNumber:'sample data', altSubscriberNo:'sample data', medicalRecNo:'sample data', employeeNo:'sample data', socialSecNo:'sample data', medicaidNo:'sample data', medicareNo:'sample data', userDefined2:'sample data', userDefined1:'sample data', languageCode:'sample data', maritalStatus:'sample data', gender:'sample data', dateOfBirth:'2018-01-01', contactTitle:'sample data', busPhoneNumber:'sample data', homePhoneNumber:'sample data', zipCode:'sample data', state:'sample data', city:'sample data', addressLine2:'sample data', addressLine1:'sample data', middleInitial:'sample data', firstName:'sample data', lastName:'sample data', personNumber:'sample data', subscriberId:'sample data', seqPrediId:1234, seqMemberEdi:1234},
       {riderCode20:'sample data', riderCode19:'sample data', riderCode18:'sample data', riderCode17:'sample data', riderCode16:'sample data', riderCode15:'sample data', riderCode14:'sample data', riderCode13:'sample data', riderCode12:'sample data', riderCode11:'sample data', riderCode10:'sample data', riderCode9:'sample data', rateType:'sample data', eligUserDefined3:'sample data', eligUserDefined2:'sample data', userDate20:'2018-01-01', userDate19:'2018-01-01', userDate18:'2018-01-01', userDate17:'2018-01-01', userDate16:'2018-01-01', userDate15:'2018-01-01', userDate14:'2018-01-01', userDate13:'2018-01-01', userDate12:'2018-01-01', userDate11:'2018-01-01', userDate10:'2018-01-01', userDate9:'2018-01-01', userDate8:'2018-01-01', userDate7:'2018-01-01', userDate6:'2018-01-01', userDate5:'2018-01-01', userDate4:'2018-01-01', userDate3:'2018-01-01', userDate2:'2018-01-01', userDate1:'2018-01-01', userDefined22:'sample data', userDefined21:'sample data', userDefined20:'sample data', userDefined19:'sample data', userDefined18:'sample data', userDefined17:'sample data', userDefined16:'sample data', userDefined15:'sample data', userDefined14:'sample data', userDefined13:'sample data', userDefined12:'sample data', userDefined11:'sample data', userDefined10:'sample data', userDefined9:'sample data', userDefined8:'sample data', userDefined7:'sample data', userDefined6:'sample data', userDefined5:'sample data', userDefined4:'sample data', userDefined3:'sample data', employmentStatusCode:'sample data', diamondId:'sample data', useEftFlg:'sample data', subscLocation:'sample data', subscDept:'sample data', paidThruDate:'2018-01-01', billedThruDate:'2018-01-01', billEffectiveFromDate:'2018-01-01', benefitStartDate:'2018-01-01', pecWaived:'sample data', reasonCode:'sample data', pecEndDate:'2018-01-01', country:'sample data', respCountry:'sample data', akaCountry:'sample data', salary:1234, memberSearchOldValue:'sample data', memberSearchIdentifier:'sample data', eligUserDefined1:'sample data', seqMembId:1234, provider2Id:'sample data', panelId:'sample data', ipaId:'sample data', provider1Id:'sample data', premOverrideCode:'sample data', premOverrideAmt:1234, premOverrideStep:1234, eligStatus:'sample data', hireDate:'2018-01-01', otherStatusFlag:'sample data', medicareStatusFlg:'sample data', riderCode8:'sample data', riderCode7:'sample data', riderCode6:'sample data', riderCode5:'sample data', riderCode4:'sample data', riderCode3:'sample data', riderCode2:'sample data', riderCode1:'sample data', lineOfBusiness:'sample data', planCode:'sample data', groupId:'sample data', relationshipCode:'sample data', termReason:'sample data', termDate:'2018-01-01', effectiveDate:'2018-01-01', verfiedThruDate:'2018-01-01', respPhoneNumber:'sample data', respZipCode:'sample data', respState:'sample data', respCity:'sample data', respAddressLine2:'sample data', respAddressLine1:'sample data', respFirstName:'sample data', respLastName:'sample data', akaPhoneNumber:'sample data', akaZipCode:'sample data', akaState:'sample data', akaCity:'sample data', akaAddressLine2:'sample data', akaAddressLine1:'sample data', akaFirstName:'sample data', akaLastName:'sample data', depVerifStatus:'sample data', holdDate:'2018-01-01', holdReason:'sample data', altPersonNumber:'sample data', altSubscriberNo:'sample data', medicalRecNo:'sample data', employeeNo:'sample data', socialSecNo:'sample data', medicaidNo:'sample data', medicareNo:'sample data', userDefined2:'sample data', userDefined1:'sample data', languageCode:'sample data', maritalStatus:'sample data', gender:'sample data', dateOfBirth:'2018-01-01', contactTitle:'sample data', busPhoneNumber:'sample data', homePhoneNumber:'sample data', zipCode:'sample data', state:'sample data', city:'sample data', addressLine2:'sample data', addressLine1:'sample data', middleInitial:'sample data', firstName:'sample data', lastName:'sample data', personNumber:'sample data', subscriberId:'sample data', seqPrediId:1234, seqMemberEdi:1234},
       {riderCode20:'sample data', riderCode19:'sample data', riderCode18:'sample data', riderCode17:'sample data', riderCode16:'sample data', riderCode15:'sample data', riderCode14:'sample data', riderCode13:'sample data', riderCode12:'sample data', riderCode11:'sample data', riderCode10:'sample data', riderCode9:'sample data', rateType:'sample data', eligUserDefined3:'sample data', eligUserDefined2:'sample data', userDate20:'2018-01-01', userDate19:'2018-01-01', userDate18:'2018-01-01', userDate17:'2018-01-01', userDate16:'2018-01-01', userDate15:'2018-01-01', userDate14:'2018-01-01', userDate13:'2018-01-01', userDate12:'2018-01-01', userDate11:'2018-01-01', userDate10:'2018-01-01', userDate9:'2018-01-01', userDate8:'2018-01-01', userDate7:'2018-01-01', userDate6:'2018-01-01', userDate5:'2018-01-01', userDate4:'2018-01-01', userDate3:'2018-01-01', userDate2:'2018-01-01', userDate1:'2018-01-01', userDefined22:'sample data', userDefined21:'sample data', userDefined20:'sample data', userDefined19:'sample data', userDefined18:'sample data', userDefined17:'sample data', userDefined16:'sample data', userDefined15:'sample data', userDefined14:'sample data', userDefined13:'sample data', userDefined12:'sample data', userDefined11:'sample data', userDefined10:'sample data', userDefined9:'sample data', userDefined8:'sample data', userDefined7:'sample data', userDefined6:'sample data', userDefined5:'sample data', userDefined4:'sample data', userDefined3:'sample data', employmentStatusCode:'sample data', diamondId:'sample data', useEftFlg:'sample data', subscLocation:'sample data', subscDept:'sample data', paidThruDate:'2018-01-01', billedThruDate:'2018-01-01', billEffectiveFromDate:'2018-01-01', benefitStartDate:'2018-01-01', pecWaived:'sample data', reasonCode:'sample data', pecEndDate:'2018-01-01', country:'sample data', respCountry:'sample data', akaCountry:'sample data', salary:1234, memberSearchOldValue:'sample data', memberSearchIdentifier:'sample data', eligUserDefined1:'sample data', seqMembId:1234, provider2Id:'sample data', panelId:'sample data', ipaId:'sample data', provider1Id:'sample data', premOverrideCode:'sample data', premOverrideAmt:1234, premOverrideStep:1234, eligStatus:'sample data', hireDate:'2018-01-01', otherStatusFlag:'sample data', medicareStatusFlg:'sample data', riderCode8:'sample data', riderCode7:'sample data', riderCode6:'sample data', riderCode5:'sample data', riderCode4:'sample data', riderCode3:'sample data', riderCode2:'sample data', riderCode1:'sample data', lineOfBusiness:'sample data', planCode:'sample data', groupId:'sample data', relationshipCode:'sample data', termReason:'sample data', termDate:'2018-01-01', effectiveDate:'2018-01-01', verfiedThruDate:'2018-01-01', respPhoneNumber:'sample data', respZipCode:'sample data', respState:'sample data', respCity:'sample data', respAddressLine2:'sample data', respAddressLine1:'sample data', respFirstName:'sample data', respLastName:'sample data', akaPhoneNumber:'sample data', akaZipCode:'sample data', akaState:'sample data', akaCity:'sample data', akaAddressLine2:'sample data', akaAddressLine1:'sample data', akaFirstName:'sample data', akaLastName:'sample data', depVerifStatus:'sample data', holdDate:'2018-01-01', holdReason:'sample data', altPersonNumber:'sample data', altSubscriberNo:'sample data', medicalRecNo:'sample data', employeeNo:'sample data', socialSecNo:'sample data', medicaidNo:'sample data', medicareNo:'sample data', userDefined2:'sample data', userDefined1:'sample data', languageCode:'sample data', maritalStatus:'sample data', gender:'sample data', dateOfBirth:'2018-01-01', contactTitle:'sample data', busPhoneNumber:'sample data', homePhoneNumber:'sample data', zipCode:'sample data', state:'sample data', city:'sample data', addressLine2:'sample data', addressLine1:'sample data', middleInitial:'sample data', firstName:'sample data', lastName:'sample data', personNumber:'sample data', subscriberId:'sample data', seqPrediId:1234, seqMemberEdi:1234}

      ];
      service.getMemberEdiEligWorks().subscribe(users => {
        expect(users.length).toBe(3);
      });

      const req = httpMock.expectOne(`${environment.apiUrl}/memberedieligworks/?use-pagination=false&page=0&size=0`);
      expect(req.request.method).toBe("GET");
      req.flush(memberEdiEligWork);
    });
  });


  describe('#createMemberEdiEligWork', () => {
    var id = 1;
    it('should return an Promise<MemberEdiEligWork>', () => {
      const memberEdiEligWork: MemberEdiEligWork = {riderCode20:'sample data', riderCode19:'sample data', riderCode18:'sample data', riderCode17:'sample data', riderCode16:'sample data', riderCode15:'sample data', riderCode14:'sample data', riderCode13:'sample data', riderCode12:'sample data', riderCode11:'sample data', riderCode10:'sample data', riderCode9:'sample data', rateType:'sample data', eligUserDefined3:'sample data', eligUserDefined2:'sample data', userDate20:'2018-01-01', userDate19:'2018-01-01', userDate18:'2018-01-01', userDate17:'2018-01-01', userDate16:'2018-01-01', userDate15:'2018-01-01', userDate14:'2018-01-01', userDate13:'2018-01-01', userDate12:'2018-01-01', userDate11:'2018-01-01', userDate10:'2018-01-01', userDate9:'2018-01-01', userDate8:'2018-01-01', userDate7:'2018-01-01', userDate6:'2018-01-01', userDate5:'2018-01-01', userDate4:'2018-01-01', userDate3:'2018-01-01', userDate2:'2018-01-01', userDate1:'2018-01-01', userDefined22:'sample data', userDefined21:'sample data', userDefined20:'sample data', userDefined19:'sample data', userDefined18:'sample data', userDefined17:'sample data', userDefined16:'sample data', userDefined15:'sample data', userDefined14:'sample data', userDefined13:'sample data', userDefined12:'sample data', userDefined11:'sample data', userDefined10:'sample data', userDefined9:'sample data', userDefined8:'sample data', userDefined7:'sample data', userDefined6:'sample data', userDefined5:'sample data', userDefined4:'sample data', userDefined3:'sample data', employmentStatusCode:'sample data', diamondId:'sample data', useEftFlg:'sample data', subscLocation:'sample data', subscDept:'sample data', paidThruDate:'2018-01-01', billedThruDate:'2018-01-01', billEffectiveFromDate:'2018-01-01', benefitStartDate:'2018-01-01', pecWaived:'sample data', reasonCode:'sample data', pecEndDate:'2018-01-01', country:'sample data', respCountry:'sample data', akaCountry:'sample data', salary:1234, memberSearchOldValue:'sample data', memberSearchIdentifier:'sample data', eligUserDefined1:'sample data', seqMembId:1234, provider2Id:'sample data', panelId:'sample data', ipaId:'sample data', provider1Id:'sample data', premOverrideCode:'sample data', premOverrideAmt:1234, premOverrideStep:1234, eligStatus:'sample data', hireDate:'2018-01-01', otherStatusFlag:'sample data', medicareStatusFlg:'sample data', riderCode8:'sample data', riderCode7:'sample data', riderCode6:'sample data', riderCode5:'sample data', riderCode4:'sample data', riderCode3:'sample data', riderCode2:'sample data', riderCode1:'sample data', lineOfBusiness:'sample data', planCode:'sample data', groupId:'sample data', relationshipCode:'sample data', termReason:'sample data', termDate:'2018-01-01', effectiveDate:'2018-01-01', verfiedThruDate:'2018-01-01', respPhoneNumber:'sample data', respZipCode:'sample data', respState:'sample data', respCity:'sample data', respAddressLine2:'sample data', respAddressLine1:'sample data', respFirstName:'sample data', respLastName:'sample data', akaPhoneNumber:'sample data', akaZipCode:'sample data', akaState:'sample data', akaCity:'sample data', akaAddressLine2:'sample data', akaAddressLine1:'sample data', akaFirstName:'sample data', akaLastName:'sample data', depVerifStatus:'sample data', holdDate:'2018-01-01', holdReason:'sample data', altPersonNumber:'sample data', altSubscriberNo:'sample data', medicalRecNo:'sample data', employeeNo:'sample data', socialSecNo:'sample data', medicaidNo:'sample data', medicareNo:'sample data', userDefined2:'sample data', userDefined1:'sample data', languageCode:'sample data', maritalStatus:'sample data', gender:'sample data', dateOfBirth:'2018-01-01', contactTitle:'sample data', busPhoneNumber:'sample data', homePhoneNumber:'sample data', zipCode:'sample data', state:'sample data', city:'sample data', addressLine2:'sample data', addressLine1:'sample data', middleInitial:'sample data', firstName:'sample data', lastName:'sample data', personNumber:'sample data', subscriberId:'sample data', seqPrediId:1234, seqMemberEdi:1234};
      service.createMemberEdiEligWork(memberEdiEligWork).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/memberedieligworks`);
      expect(req.request.method).toBe("POST");
      req.flush(null, { status: 200, statusText: 'Ok' });

    });
  });


  describe('#updateMemberEdiEligWork', () => {
    var id = 1;
    it('should return an Promise<MemberEdiEligWork>', () => {
      const memberEdiEligWork: MemberEdiEligWork = {riderCode20:'sample data', riderCode19:'sample data', riderCode18:'sample data', riderCode17:'sample data', riderCode16:'sample data', riderCode15:'sample data', riderCode14:'sample data', riderCode13:'sample data', riderCode12:'sample data', riderCode11:'sample data', riderCode10:'sample data', riderCode9:'sample data', rateType:'sample data', eligUserDefined3:'sample data', eligUserDefined2:'sample data', userDate20:'2018-01-01', userDate19:'2018-01-01', userDate18:'2018-01-01', userDate17:'2018-01-01', userDate16:'2018-01-01', userDate15:'2018-01-01', userDate14:'2018-01-01', userDate13:'2018-01-01', userDate12:'2018-01-01', userDate11:'2018-01-01', userDate10:'2018-01-01', userDate9:'2018-01-01', userDate8:'2018-01-01', userDate7:'2018-01-01', userDate6:'2018-01-01', userDate5:'2018-01-01', userDate4:'2018-01-01', userDate3:'2018-01-01', userDate2:'2018-01-01', userDate1:'2018-01-01', userDefined22:'sample data', userDefined21:'sample data', userDefined20:'sample data', userDefined19:'sample data', userDefined18:'sample data', userDefined17:'sample data', userDefined16:'sample data', userDefined15:'sample data', userDefined14:'sample data', userDefined13:'sample data', userDefined12:'sample data', userDefined11:'sample data', userDefined10:'sample data', userDefined9:'sample data', userDefined8:'sample data', userDefined7:'sample data', userDefined6:'sample data', userDefined5:'sample data', userDefined4:'sample data', userDefined3:'sample data', employmentStatusCode:'sample data', diamondId:'sample data', useEftFlg:'sample data', subscLocation:'sample data', subscDept:'sample data', paidThruDate:'2018-01-01', billedThruDate:'2018-01-01', billEffectiveFromDate:'2018-01-01', benefitStartDate:'2018-01-01', pecWaived:'sample data', reasonCode:'sample data', pecEndDate:'2018-01-01', country:'sample data', respCountry:'sample data', akaCountry:'sample data', salary:1234, memberSearchOldValue:'sample data', memberSearchIdentifier:'sample data', eligUserDefined1:'sample data', seqMembId:1234, provider2Id:'sample data', panelId:'sample data', ipaId:'sample data', provider1Id:'sample data', premOverrideCode:'sample data', premOverrideAmt:1234, premOverrideStep:1234, eligStatus:'sample data', hireDate:'2018-01-01', otherStatusFlag:'sample data', medicareStatusFlg:'sample data', riderCode8:'sample data', riderCode7:'sample data', riderCode6:'sample data', riderCode5:'sample data', riderCode4:'sample data', riderCode3:'sample data', riderCode2:'sample data', riderCode1:'sample data', lineOfBusiness:'sample data', planCode:'sample data', groupId:'sample data', relationshipCode:'sample data', termReason:'sample data', termDate:'2018-01-01', effectiveDate:'2018-01-01', verfiedThruDate:'2018-01-01', respPhoneNumber:'sample data', respZipCode:'sample data', respState:'sample data', respCity:'sample data', respAddressLine2:'sample data', respAddressLine1:'sample data', respFirstName:'sample data', respLastName:'sample data', akaPhoneNumber:'sample data', akaZipCode:'sample data', akaState:'sample data', akaCity:'sample data', akaAddressLine2:'sample data', akaAddressLine1:'sample data', akaFirstName:'sample data', akaLastName:'sample data', depVerifStatus:'sample data', holdDate:'2018-01-01', holdReason:'sample data', altPersonNumber:'sample data', altSubscriberNo:'sample data', medicalRecNo:'sample data', employeeNo:'sample data', socialSecNo:'sample data', medicaidNo:'sample data', medicareNo:'sample data', userDefined2:'sample data', userDefined1:'sample data', languageCode:'sample data', maritalStatus:'sample data', gender:'sample data', dateOfBirth:'2018-01-01', contactTitle:'sample data', busPhoneNumber:'sample data', homePhoneNumber:'sample data', zipCode:'sample data', state:'sample data', city:'sample data', addressLine2:'sample data', addressLine1:'sample data', middleInitial:'sample data', firstName:'sample data', lastName:'sample data', personNumber:'sample data', subscriberId:'sample data', seqPrediId:1234, seqMemberEdi:1234};
      service.updateMemberEdiEligWork(memberEdiEligWork, id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/memberedieligworks/${id}`);
      expect(req.request.method).toBe("PUT");
      req.flush(null, { status: 200, statusText: 'Ok' });
    });
  });


  describe('#deleteMemberEdiEligWork', () => {
    var id = 1;
    it('should call delete method with correct parameter', () => {
      service.deleteMemberEdiEligWork(id).subscribe(response => {
         expect(response).toEqual(null);
      });
      const req = httpMock.expectOne(`${environment.apiUrl}/memberedieligworks/${id}`);
      expect(req.request.method).toBe("DELETE");
      req.flush(null, { status: 400, statusText: 'Ok' });
    });
  });


});