/* Copyright (c) 2021 . All Rights Reserved. */

import {ProfsvcClaimDetailPrimaryKey} from "./profsvc-claim-detail-primary-key.model";

export class ProfsvcClaimDetail {
    profsvcClaimDetailPrimaryKey: ProfsvcClaimDetailPrimaryKey = new ProfsvcClaimDetailPrimaryKey();
    seqMcondId: number;
    adminFeeExists: string;
    evalForAdminFee: string;
    penUncleanDays: number;
    intPenDscRsn: string;
    penaltyAmt: number;
    geoZipRegion: string;
    providerLineItemControlNo: string;
    spinalManipInitTreatmentDt: string;
    purchasedSvcChargeAmt: number;
    purchasedSvcChargeProvId: string;
    mammographyCertNo: string;
    latestCreatineTestDate: string;
    latestHemoTestDate: string;
    dateLatestVisit: string;
    dmeRentalFrequency: string;
    dmePurchasePrice: number;
    dmeRentalPrice: number;
    dmeQuantity: number;
    dmeProcedureCode: string;
    seqCdaplDtl: number;
    authPrice: number;
    authProcCodeUsed: string;
    seqTfrulId: number;
    seqRuleId: number;
    intDscntAdjReason: string;
    paidNetAmt: number;
    deductUncleanDays: number;
    uncleanDays: number;
    uncleanFlag: string;
    interestResetDate: string;
    interestInquiryDate: string;
    discountAmt: number;
    interestAmt: number;
    multModAllowedFactor: number;
    allowedFactor2: number;
    familyPlanningIndicator: string;
    epsdt: string;
    withholdSurplus: number;
    bmaReason: string;
    bmaAmount: number;
    printFlagChangeInd: string;
    capFundRunMonth: string;
    capFundSubModelId: string;
    capFundModelId: string;
    totalUnits: number;
    capFundStatus: number;
    capFundDateOverrideFlag: string;
    capFundWithholdAmt: number;
    auditStatus: string;
    reservedLocalUseDet: string;
    cobIndicator: string;
    emergencyServicesInd: string;
    epsdtFamilyPlanningInd: string;
    placeOfService: string;
    adjudDate: string;
    cobPatLiabCvrgAmt: number;
    fullCvrgAmt: number;
    ocAllowedAmt: number;
    primaryPaidAmount: number;
    hcpcsModifier4: string;
    hcpcsModifier3: string;
    hcpcsModifier2: string;
    hcpcsModifier1: string;
    diagCodePointer4: string;
    diagCodePointer3: string;
    diagCodePointer2: string;
    diagCodePointer1: string;
    svcToDate: string;
    typeOfService: string;
    updateProcess: string;
    updateUser: string;
    updateDatetime: string;
    insertProcess: string;
    insertUser: string;
    insertDatetime: string;
    securityCode: string;
    anesTotalTime: number;
    anesEndTime: number;
    anesStartTime: number;
    hiddenUserDef2: number;
    hiddenUserDef1: string;
    seqAuthDetail: number;
    seqApTrans: number;
    raId: string;
    eobId: string;
    printFlag: string;
    glRefCode: string;
    companyCode: string;
    checkDate: string;
    postDate: string;
    medDefCode: string;
    adjudicationMethod: string;
    processingStatus: string;
    claimStatus: string;
    holdReason3: string;
    holdReason2: string;
    holdReason1: string;
    otherCarrierRsn: string;
    adjustmentReason: string;
    deductibleReason: string;
    copay2Reason: string;
    copay1Reason: string;
    notCoveredReason: string;
    allowedReason: string;
    netAmt: number;
    withholdAmt: number;
    otherCarrierAmt: number;
    deductibleAmt: number;
    copayment2Amt: number;
    copayment1Amt: number;
    notCoveredAmt: number;
    allowedAmt: number;
    allowedFactor: number;
    billedAmt: number | string;
    quantity: number;
    procedureModifier: string;
    procedureCode: string;
    billedAllowedAmt: number;
    billedModifier: string;
    billedProcedure: string;
    seqMembId: number;
    seqProvId: number;
    planCode: string;
    placeServPointer: number;
    diagnosisPointer: number;
    detailSvcDate: string;
}
