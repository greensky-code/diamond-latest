/* Copyright (c) 2020 . All Rights Reserved. */

import {InstClaimDetailPrimaryKey} from "./inst-claim-detail-primary-key.model";

export class InstClaimDetail {
  instClaimDetailPrimaryKey: InstClaimDetailPrimaryKey = new InstClaimDetailPrimaryKey();
  detailSvcDate: string;
  detailThruDate: string;
  diagnosisPointer: number;
  placeServPointer: number;
  seqProvId: number;
  seqMembId: number;
  billedProcedure: string;
  billedModifier: string;
  billedAllowedAmt: number;
  procedureCode: string;
  procedureModifier: string;
  quantity: number;
  billedAmt: number;
  allowedFactor: number;
  allowedAmt: number;
  notCoveredAmt: number;
  copayment1Amt: number;
  copayment2Amt: number;
  deductibleAmt: number;
  otherCarrierAmt: number;
  withholdAmt: number;
  netAmt: number;
  allowedReason: string;
  notCoveredReason: string;
  copay1Reason: string;
  copay2Reason: string;
  deductibleReason: string;
  adjustmentReason: string;
  otherCarrierRsn: string;
  holdReason1: string;
  holdReason2: string;
  holdReason3: string;
  claimStatus: string;
  processingStatus: string;
  adjudicationMethod: string;
  medDefCode: string;
  postDate: Date;
  checkDate: Date;
  companyCode: string;
  glRefCode: string;
  printFlag: string;
  eobId: string;
  raId: string;
  seqApTrans: number;
  seqAuthDetail: number;
  hiddenUserDef1: string;
  hiddenUserDef2: number;
  countAsDays: string;
  securityCode: string;
  insertDatetime: Date;
  insertUser: string;
  insertProcess: string;
  updateDatetime: Date;
  updateUser: string;
  updateProcess: string;
  carveOut: string;
  systemGenerated: string;
  capOutlierInclExcl: string;
  alternateProcCode: string;
  accommodationRate: number;
  nationalUnlabeled1: string;
  ocAllowedAmt: number;
  fullCvrgAmt: number;
  cobPatLiabCvrgAmt: number;
  adjudDate: Date;
  capFundWithholdAmt: number;
  capFundDateOverrideFlag: string;
  capFundStatus: number;
  totalUnits: number;
  capFundModelId: string;
  capFundSubModelId: string;
  capFundRunMonth: Date;
  printFlagChangeInd: string;
  bmaAmount: number;
  bmaReason: string;
  withholdSurplus: number;
  auditStatus: string;
  apcCode: string;
  apcPaymentStatus: string;
  apcPayment: number;
  apcRate: number;
  apcWeight: number;
  apcDiscount: number;
  interestAmt: number;
  discountAmt: number;
  interestInquiryDate: Date;
  interestResetDate: Date;
  uncleanFlag: string;
  uncleanDays: number;
  deductUncleanDays: number;
  paidNetAmt: number;
  intDscntAdjReason: string;
  seqRuleId: number;
  sysRevCode: string;
  sysBilledAmt: number;
  seqTfrulId: number;
  authProcCodeUsed: string;
  authPrice: number;
  seqCdaplDtl: number;
  apcCopay: number;
  apcDeduct: number;
  apcPackagedCharge: number;
  apcReallocatedCharge: number;
  apcOutlierPayment: number;
  procedureModifier2: string;
  procedureModifier3: string;
  procedureModifier4: string;
  geoZipRegion: string;
  penaltyAmt: number;
  intPenDscRsn: string;
  penUncleanDays: number;
  evalForAdminFee: string;
  adminFeeExists: string;
  tfruleGlobalActnApply: number;
}
