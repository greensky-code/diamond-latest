/* Copyright (c) 2021 . All Rights Reserved. */

import { Injectable } from '@angular/core';
import { Http, Response, URLSearchParams, RequestOptions } from '@angular/http';
import { Observable } from 'rxjs/Rx';
import { Headers } from '@angular/http';
import 'rxjs/add/operator/map'
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/map';
import { ProfsvcClaimDetail} from "../../api-models"

var profsvcClaimDetail1 = new ProfsvcClaimDetail();
profsvcClaimDetail1.seqMcondId =123;
profsvcClaimDetail1.adminFeeExists ="sample data1";
profsvcClaimDetail1.evalForAdminFee ="sample data1";
profsvcClaimDetail1.penUncleanDays =123;
profsvcClaimDetail1.intPenDscRsn ="sample data1";
profsvcClaimDetail1.penaltyAmt =123;
profsvcClaimDetail1.geoZipRegion ="sample data1";
profsvcClaimDetail1.providerLineItemControlNo ="sample data1";
profsvcClaimDetail1.spinalManipInitTreatmentDt =new Date('2010-01-01');
profsvcClaimDetail1.purchasedSvcChargeAmt =123;
profsvcClaimDetail1.purchasedSvcChargeProvId ="sample data1";
profsvcClaimDetail1.mammographyCertNo ="sample data1";
profsvcClaimDetail1.latestCreatineTestDate =new Date('2010-01-01');
profsvcClaimDetail1.latestHemoTestDate =new Date('2010-01-01');
profsvcClaimDetail1.dateLatestVisit =new Date('2010-01-01');
profsvcClaimDetail1.dmeRentalFrequency ="sample data1";
profsvcClaimDetail1.dmePurchasePrice =123;
profsvcClaimDetail1.dmeRentalPrice =123;
profsvcClaimDetail1.dmeQuantity =123;
profsvcClaimDetail1.dmeProcedureCode ="sample data1";
profsvcClaimDetail1.seqCdaplDtl =123;
profsvcClaimDetail1.authPrice =123;
profsvcClaimDetail1.authProcCodeUsed ="sample data1";
profsvcClaimDetail1.seqTfrulId =123;
profsvcClaimDetail1.seqRuleId =123;
profsvcClaimDetail1.intDscntAdjReason ="sample data1";
profsvcClaimDetail1.paidNetAmt =123;
profsvcClaimDetail1.deductUncleanDays =123;
profsvcClaimDetail1.uncleanDays =123;
profsvcClaimDetail1.uncleanFlag ="sample data1";
profsvcClaimDetail1.interestResetDate =new Date('2010-01-01');
profsvcClaimDetail1.interestInquiryDate =new Date('2010-01-01');
profsvcClaimDetail1.discountAmt =123;
profsvcClaimDetail1.interestAmt =123;
profsvcClaimDetail1.multModAllowedFactor =123;
profsvcClaimDetail1.allowedFactor2 =123;
profsvcClaimDetail1.familyPlanningIndicator ="sample data1";
profsvcClaimDetail1.epsdt ="sample data1";
profsvcClaimDetail1.withholdSurplus =123;
profsvcClaimDetail1.bmaReason ="sample data1";
profsvcClaimDetail1.bmaAmount =123;
profsvcClaimDetail1.printFlagChangeInd ="sample data1";
profsvcClaimDetail1.capFundRunMonth =new Date('2010-01-01');
profsvcClaimDetail1.capFundSubModelId ="sample data1";
profsvcClaimDetail1.capFundModelId ="sample data1";
profsvcClaimDetail1.totalUnits =123;
profsvcClaimDetail1.capFundStatus =123;
profsvcClaimDetail1.capFundDateOverrideFlag ="sample data1";
profsvcClaimDetail1.capFundWithholdAmt =123;
profsvcClaimDetail1.auditStatus ="sample data1";
profsvcClaimDetail1.reservedLocalUseDet ="sample data1";
profsvcClaimDetail1.cobIndicator ="sample data1";
profsvcClaimDetail1.emergencyServicesInd ="sample data1";
profsvcClaimDetail1.epsdtFamilyPlanningInd ="sample data1";
profsvcClaimDetail1.placeOfService ="sample data1";
profsvcClaimDetail1.adjudDate =new Date('2010-01-01');
profsvcClaimDetail1.cobPatLiabCvrgAmt =123;
profsvcClaimDetail1.fullCvrgAmt =123;
profsvcClaimDetail1.ocAllowedAmt =123;
profsvcClaimDetail1.primaryPaidAmount =123;
profsvcClaimDetail1.hcpcsModifier4 ="sample data1";
profsvcClaimDetail1.hcpcsModifier3 ="sample data1";
profsvcClaimDetail1.hcpcsModifier2 ="sample data1";
profsvcClaimDetail1.hcpcsModifier1 ="sample data1";
profsvcClaimDetail1.diagCodePointer4 ="sample data1";
profsvcClaimDetail1.diagCodePointer3 ="sample data1";
profsvcClaimDetail1.diagCodePointer2 ="sample data1";
profsvcClaimDetail1.diagCodePointer1 ="sample data1";
profsvcClaimDetail1.svcToDate =new Date('2010-01-01');
profsvcClaimDetail1.typeOfService ="sample data1";
profsvcClaimDetail1.updateProcess ="sample data1";
profsvcClaimDetail1.updateUser ="sample data1";
profsvcClaimDetail1.updateDatetime =new Date('2010-01-01');
profsvcClaimDetail1.insertProcess ="sample data1";
profsvcClaimDetail1.insertUser ="sample data1";
profsvcClaimDetail1.insertDatetime =new Date('2010-01-01');
profsvcClaimDetail1.securityCode ="sample data1";
profsvcClaimDetail1.anesTotalTime =123;
profsvcClaimDetail1.anesEndTime =123;
profsvcClaimDetail1.anesStartTime =123;
profsvcClaimDetail1.hiddenUserDef2 =123;
profsvcClaimDetail1.hiddenUserDef1 ="sample data1";
profsvcClaimDetail1.seqAuthDetail =123;
profsvcClaimDetail1.seqApTrans =123;
profsvcClaimDetail1.raId ="sample data1";
profsvcClaimDetail1.eobId ="sample data1";
profsvcClaimDetail1.printFlag ="sample data1";
profsvcClaimDetail1.glRefCode ="sample data1";
profsvcClaimDetail1.companyCode ="sample data1";
profsvcClaimDetail1.checkDate =new Date('2010-01-01');
profsvcClaimDetail1.postDate =new Date('2010-01-01');
profsvcClaimDetail1.medDefCode ="sample data1";
profsvcClaimDetail1.adjudicationMethod ="sample data1";
profsvcClaimDetail1.processingStatus ="sample data1";
profsvcClaimDetail1.claimStatus ="sample data1";
profsvcClaimDetail1.holdReason3 ="sample data1";
profsvcClaimDetail1.holdReason2 ="sample data1";
profsvcClaimDetail1.holdReason1 ="sample data1";
profsvcClaimDetail1.otherCarrierRsn ="sample data1";
profsvcClaimDetail1.adjustmentReason ="sample data1";
profsvcClaimDetail1.deductibleReason ="sample data1";
profsvcClaimDetail1.copay2Reason ="sample data1";
profsvcClaimDetail1.copay1Reason ="sample data1";
profsvcClaimDetail1.notCoveredReason ="sample data1";
profsvcClaimDetail1.allowedReason ="sample data1";
profsvcClaimDetail1.netAmt =123;
profsvcClaimDetail1.withholdAmt =123;
profsvcClaimDetail1.otherCarrierAmt =123;
profsvcClaimDetail1.deductibleAmt =123;
profsvcClaimDetail1.copayment2Amt =123;
profsvcClaimDetail1.copayment1Amt =123;
profsvcClaimDetail1.notCoveredAmt =123;
profsvcClaimDetail1.allowedAmt =123;
profsvcClaimDetail1.allowedFactor =123;
profsvcClaimDetail1.billedAmt =123;
profsvcClaimDetail1.quantity =123;
profsvcClaimDetail1.procedureModifier ="sample data1";
profsvcClaimDetail1.procedureCode ="sample data1";
profsvcClaimDetail1.billedAllowedAmt =123;
profsvcClaimDetail1.billedModifier ="sample data1";
profsvcClaimDetail1.billedProcedure ="sample data1";
profsvcClaimDetail1.seqMembId =123;
profsvcClaimDetail1.seqProvId =123;
profsvcClaimDetail1.placeServPointer =123;
profsvcClaimDetail1.diagnosisPointer =123;
profsvcClaimDetail1.detailSvcDate =new Date('2010-01-01');
profsvcClaimDetail1.subLineCode ="sample data1";
profsvcClaimDetail1.lineNumber =123;
profsvcClaimDetail1.seqClaimId =123;

var profsvcClaimDetail2 = new ProfsvcClaimDetail();
profsvcClaimDetail2.seqMcondId =123;
profsvcClaimDetail2.adminFeeExists ="sample data2";
profsvcClaimDetail2.evalForAdminFee ="sample data2";
profsvcClaimDetail2.penUncleanDays =123;
profsvcClaimDetail2.intPenDscRsn ="sample data2";
profsvcClaimDetail2.penaltyAmt =123;
profsvcClaimDetail2.geoZipRegion ="sample data2";
profsvcClaimDetail2.providerLineItemControlNo ="sample data2";
profsvcClaimDetail2.spinalManipInitTreatmentDt =new Date('2010-01-01');
profsvcClaimDetail2.purchasedSvcChargeAmt =123;
profsvcClaimDetail2.purchasedSvcChargeProvId ="sample data2";
profsvcClaimDetail2.mammographyCertNo ="sample data2";
profsvcClaimDetail2.latestCreatineTestDate =new Date('2010-01-01');
profsvcClaimDetail2.latestHemoTestDate =new Date('2010-01-01');
profsvcClaimDetail2.dateLatestVisit =new Date('2010-01-01');
profsvcClaimDetail2.dmeRentalFrequency ="sample data2";
profsvcClaimDetail2.dmePurchasePrice =123;
profsvcClaimDetail2.dmeRentalPrice =123;
profsvcClaimDetail2.dmeQuantity =123;
profsvcClaimDetail2.dmeProcedureCode ="sample data2";
profsvcClaimDetail2.seqCdaplDtl =123;
profsvcClaimDetail2.authPrice =123;
profsvcClaimDetail2.authProcCodeUsed ="sample data2";
profsvcClaimDetail2.seqTfrulId =123;
profsvcClaimDetail2.seqRuleId =123;
profsvcClaimDetail2.intDscntAdjReason ="sample data2";
profsvcClaimDetail2.paidNetAmt =123;
profsvcClaimDetail2.deductUncleanDays =123;
profsvcClaimDetail2.uncleanDays =123;
profsvcClaimDetail2.uncleanFlag ="sample data2";
profsvcClaimDetail2.interestResetDate =new Date('2010-01-01');
profsvcClaimDetail2.interestInquiryDate =new Date('2010-01-01');
profsvcClaimDetail2.discountAmt =123;
profsvcClaimDetail2.interestAmt =123;
profsvcClaimDetail2.multModAllowedFactor =123;
profsvcClaimDetail2.allowedFactor2 =123;
profsvcClaimDetail2.familyPlanningIndicator ="sample data2";
profsvcClaimDetail2.epsdt ="sample data2";
profsvcClaimDetail2.withholdSurplus =123;
profsvcClaimDetail2.bmaReason ="sample data2";
profsvcClaimDetail2.bmaAmount =123;
profsvcClaimDetail2.printFlagChangeInd ="sample data2";
profsvcClaimDetail2.capFundRunMonth =new Date('2010-01-01');
profsvcClaimDetail2.capFundSubModelId ="sample data2";
profsvcClaimDetail2.capFundModelId ="sample data2";
profsvcClaimDetail2.totalUnits =123;
profsvcClaimDetail2.capFundStatus =123;
profsvcClaimDetail2.capFundDateOverrideFlag ="sample data2";
profsvcClaimDetail2.capFundWithholdAmt =123;
profsvcClaimDetail2.auditStatus ="sample data2";
profsvcClaimDetail2.reservedLocalUseDet ="sample data2";
profsvcClaimDetail2.cobIndicator ="sample data2";
profsvcClaimDetail2.emergencyServicesInd ="sample data2";
profsvcClaimDetail2.epsdtFamilyPlanningInd ="sample data2";
profsvcClaimDetail2.placeOfService ="sample data2";
profsvcClaimDetail2.adjudDate =new Date('2010-01-01');
profsvcClaimDetail2.cobPatLiabCvrgAmt =123;
profsvcClaimDetail2.fullCvrgAmt =123;
profsvcClaimDetail2.ocAllowedAmt =123;
profsvcClaimDetail2.primaryPaidAmount =123;
profsvcClaimDetail2.hcpcsModifier4 ="sample data2";
profsvcClaimDetail2.hcpcsModifier3 ="sample data2";
profsvcClaimDetail2.hcpcsModifier2 ="sample data2";
profsvcClaimDetail2.hcpcsModifier1 ="sample data2";
profsvcClaimDetail2.diagCodePointer4 ="sample data2";
profsvcClaimDetail2.diagCodePointer3 ="sample data2";
profsvcClaimDetail2.diagCodePointer2 ="sample data2";
profsvcClaimDetail2.diagCodePointer1 ="sample data2";
profsvcClaimDetail2.svcToDate =new Date('2010-01-01');
profsvcClaimDetail2.typeOfService ="sample data2";
profsvcClaimDetail2.updateProcess ="sample data2";
profsvcClaimDetail2.updateUser ="sample data2";
profsvcClaimDetail2.updateDatetime =new Date('2010-01-01');
profsvcClaimDetail2.insertProcess ="sample data2";
profsvcClaimDetail2.insertUser ="sample data2";
profsvcClaimDetail2.insertDatetime =new Date('2010-01-01');
profsvcClaimDetail2.securityCode ="sample data2";
profsvcClaimDetail2.anesTotalTime =123;
profsvcClaimDetail2.anesEndTime =123;
profsvcClaimDetail2.anesStartTime =123;
profsvcClaimDetail2.hiddenUserDef2 =123;
profsvcClaimDetail2.hiddenUserDef1 ="sample data2";
profsvcClaimDetail2.seqAuthDetail =123;
profsvcClaimDetail2.seqApTrans =123;
profsvcClaimDetail2.raId ="sample data2";
profsvcClaimDetail2.eobId ="sample data2";
profsvcClaimDetail2.printFlag ="sample data2";
profsvcClaimDetail2.glRefCode ="sample data2";
profsvcClaimDetail2.companyCode ="sample data2";
profsvcClaimDetail2.checkDate =new Date('2010-01-01');
profsvcClaimDetail2.postDate =new Date('2010-01-01');
profsvcClaimDetail2.medDefCode ="sample data2";
profsvcClaimDetail2.adjudicationMethod ="sample data2";
profsvcClaimDetail2.processingStatus ="sample data2";
profsvcClaimDetail2.claimStatus ="sample data2";
profsvcClaimDetail2.holdReason3 ="sample data2";
profsvcClaimDetail2.holdReason2 ="sample data2";
profsvcClaimDetail2.holdReason1 ="sample data2";
profsvcClaimDetail2.otherCarrierRsn ="sample data2";
profsvcClaimDetail2.adjustmentReason ="sample data2";
profsvcClaimDetail2.deductibleReason ="sample data2";
profsvcClaimDetail2.copay2Reason ="sample data2";
profsvcClaimDetail2.copay1Reason ="sample data2";
profsvcClaimDetail2.notCoveredReason ="sample data2";
profsvcClaimDetail2.allowedReason ="sample data2";
profsvcClaimDetail2.netAmt =123;
profsvcClaimDetail2.withholdAmt =123;
profsvcClaimDetail2.otherCarrierAmt =123;
profsvcClaimDetail2.deductibleAmt =123;
profsvcClaimDetail2.copayment2Amt =123;
profsvcClaimDetail2.copayment1Amt =123;
profsvcClaimDetail2.notCoveredAmt =123;
profsvcClaimDetail2.allowedAmt =123;
profsvcClaimDetail2.allowedFactor =123;
profsvcClaimDetail2.billedAmt =123;
profsvcClaimDetail2.quantity =123;
profsvcClaimDetail2.procedureModifier ="sample data2";
profsvcClaimDetail2.procedureCode ="sample data2";
profsvcClaimDetail2.billedAllowedAmt =123;
profsvcClaimDetail2.billedModifier ="sample data2";
profsvcClaimDetail2.billedProcedure ="sample data2";
profsvcClaimDetail2.seqMembId =123;
profsvcClaimDetail2.seqProvId =123;
profsvcClaimDetail2.placeServPointer =123;
profsvcClaimDetail2.diagnosisPointer =123;
profsvcClaimDetail2.detailSvcDate =new Date('2010-01-01');
profsvcClaimDetail2.subLineCode ="sample data2";
profsvcClaimDetail2.lineNumber =123;
profsvcClaimDetail2.seqClaimId =123;

var profsvcClaimDetail3 = new ProfsvcClaimDetail();
profsvcClaimDetail3.seqMcondId =123;
profsvcClaimDetail3.adminFeeExists ="sample data3";
profsvcClaimDetail3.evalForAdminFee ="sample data3";
profsvcClaimDetail3.penUncleanDays =123;
profsvcClaimDetail3.intPenDscRsn ="sample data3";
profsvcClaimDetail3.penaltyAmt =123;
profsvcClaimDetail3.geoZipRegion ="sample data3";
profsvcClaimDetail3.providerLineItemControlNo ="sample data3";
profsvcClaimDetail3.spinalManipInitTreatmentDt =new Date('2010-01-01');
profsvcClaimDetail3.purchasedSvcChargeAmt =123;
profsvcClaimDetail3.purchasedSvcChargeProvId ="sample data3";
profsvcClaimDetail3.mammographyCertNo ="sample data3";
profsvcClaimDetail3.latestCreatineTestDate =new Date('2010-01-01');
profsvcClaimDetail3.latestHemoTestDate =new Date('2010-01-01');
profsvcClaimDetail3.dateLatestVisit =new Date('2010-01-01');
profsvcClaimDetail3.dmeRentalFrequency ="sample data3";
profsvcClaimDetail3.dmePurchasePrice =123;
profsvcClaimDetail3.dmeRentalPrice =123;
profsvcClaimDetail3.dmeQuantity =123;
profsvcClaimDetail3.dmeProcedureCode ="sample data3";
profsvcClaimDetail3.seqCdaplDtl =123;
profsvcClaimDetail3.authPrice =123;
profsvcClaimDetail3.authProcCodeUsed ="sample data3";
profsvcClaimDetail3.seqTfrulId =123;
profsvcClaimDetail3.seqRuleId =123;
profsvcClaimDetail3.intDscntAdjReason ="sample data3";
profsvcClaimDetail3.paidNetAmt =123;
profsvcClaimDetail3.deductUncleanDays =123;
profsvcClaimDetail3.uncleanDays =123;
profsvcClaimDetail3.uncleanFlag ="sample data3";
profsvcClaimDetail3.interestResetDate =new Date('2010-01-01');
profsvcClaimDetail3.interestInquiryDate =new Date('2010-01-01');
profsvcClaimDetail3.discountAmt =123;
profsvcClaimDetail3.interestAmt =123;
profsvcClaimDetail3.multModAllowedFactor =123;
profsvcClaimDetail3.allowedFactor2 =123;
profsvcClaimDetail3.familyPlanningIndicator ="sample data3";
profsvcClaimDetail3.epsdt ="sample data3";
profsvcClaimDetail3.withholdSurplus =123;
profsvcClaimDetail3.bmaReason ="sample data3";
profsvcClaimDetail3.bmaAmount =123;
profsvcClaimDetail3.printFlagChangeInd ="sample data3";
profsvcClaimDetail3.capFundRunMonth =new Date('2010-01-01');
profsvcClaimDetail3.capFundSubModelId ="sample data3";
profsvcClaimDetail3.capFundModelId ="sample data3";
profsvcClaimDetail3.totalUnits =123;
profsvcClaimDetail3.capFundStatus =123;
profsvcClaimDetail3.capFundDateOverrideFlag ="sample data3";
profsvcClaimDetail3.capFundWithholdAmt =123;
profsvcClaimDetail3.auditStatus ="sample data3";
profsvcClaimDetail3.reservedLocalUseDet ="sample data3";
profsvcClaimDetail3.cobIndicator ="sample data3";
profsvcClaimDetail3.emergencyServicesInd ="sample data3";
profsvcClaimDetail3.epsdtFamilyPlanningInd ="sample data3";
profsvcClaimDetail3.placeOfService ="sample data3";
profsvcClaimDetail3.adjudDate =new Date('2010-01-01');
profsvcClaimDetail3.cobPatLiabCvrgAmt =123;
profsvcClaimDetail3.fullCvrgAmt =123;
profsvcClaimDetail3.ocAllowedAmt =123;
profsvcClaimDetail3.primaryPaidAmount =123;
profsvcClaimDetail3.hcpcsModifier4 ="sample data3";
profsvcClaimDetail3.hcpcsModifier3 ="sample data3";
profsvcClaimDetail3.hcpcsModifier2 ="sample data3";
profsvcClaimDetail3.hcpcsModifier1 ="sample data3";
profsvcClaimDetail3.diagCodePointer4 ="sample data3";
profsvcClaimDetail3.diagCodePointer3 ="sample data3";
profsvcClaimDetail3.diagCodePointer2 ="sample data3";
profsvcClaimDetail3.diagCodePointer1 ="sample data3";
profsvcClaimDetail3.svcToDate =new Date('2010-01-01');
profsvcClaimDetail3.typeOfService ="sample data3";
profsvcClaimDetail3.updateProcess ="sample data3";
profsvcClaimDetail3.updateUser ="sample data3";
profsvcClaimDetail3.updateDatetime =new Date('2010-01-01');
profsvcClaimDetail3.insertProcess ="sample data3";
profsvcClaimDetail3.insertUser ="sample data3";
profsvcClaimDetail3.insertDatetime =new Date('2010-01-01');
profsvcClaimDetail3.securityCode ="sample data3";
profsvcClaimDetail3.anesTotalTime =123;
profsvcClaimDetail3.anesEndTime =123;
profsvcClaimDetail3.anesStartTime =123;
profsvcClaimDetail3.hiddenUserDef2 =123;
profsvcClaimDetail3.hiddenUserDef1 ="sample data3";
profsvcClaimDetail3.seqAuthDetail =123;
profsvcClaimDetail3.seqApTrans =123;
profsvcClaimDetail3.raId ="sample data3";
profsvcClaimDetail3.eobId ="sample data3";
profsvcClaimDetail3.printFlag ="sample data3";
profsvcClaimDetail3.glRefCode ="sample data3";
profsvcClaimDetail3.companyCode ="sample data3";
profsvcClaimDetail3.checkDate =new Date('2010-01-01');
profsvcClaimDetail3.postDate =new Date('2010-01-01');
profsvcClaimDetail3.medDefCode ="sample data3";
profsvcClaimDetail3.adjudicationMethod ="sample data3";
profsvcClaimDetail3.processingStatus ="sample data3";
profsvcClaimDetail3.claimStatus ="sample data3";
profsvcClaimDetail3.holdReason3 ="sample data3";
profsvcClaimDetail3.holdReason2 ="sample data3";
profsvcClaimDetail3.holdReason1 ="sample data3";
profsvcClaimDetail3.otherCarrierRsn ="sample data3";
profsvcClaimDetail3.adjustmentReason ="sample data3";
profsvcClaimDetail3.deductibleReason ="sample data3";
profsvcClaimDetail3.copay2Reason ="sample data3";
profsvcClaimDetail3.copay1Reason ="sample data3";
profsvcClaimDetail3.notCoveredReason ="sample data3";
profsvcClaimDetail3.allowedReason ="sample data3";
profsvcClaimDetail3.netAmt =123;
profsvcClaimDetail3.withholdAmt =123;
profsvcClaimDetail3.otherCarrierAmt =123;
profsvcClaimDetail3.deductibleAmt =123;
profsvcClaimDetail3.copayment2Amt =123;
profsvcClaimDetail3.copayment1Amt =123;
profsvcClaimDetail3.notCoveredAmt =123;
profsvcClaimDetail3.allowedAmt =123;
profsvcClaimDetail3.allowedFactor =123;
profsvcClaimDetail3.billedAmt =123;
profsvcClaimDetail3.quantity =123;
profsvcClaimDetail3.procedureModifier ="sample data3";
profsvcClaimDetail3.procedureCode ="sample data3";
profsvcClaimDetail3.billedAllowedAmt =123;
profsvcClaimDetail3.billedModifier ="sample data3";
profsvcClaimDetail3.billedProcedure ="sample data3";
profsvcClaimDetail3.seqMembId =123;
profsvcClaimDetail3.seqProvId =123;
profsvcClaimDetail3.placeServPointer =123;
profsvcClaimDetail3.diagnosisPointer =123;
profsvcClaimDetail3.detailSvcDate =new Date('2010-01-01');
profsvcClaimDetail3.subLineCode ="sample data3";
profsvcClaimDetail3.lineNumber =123;
profsvcClaimDetail3.seqClaimId =123;


export const ProfsvcClaimDetails: ProfsvcClaimDetail[] = [
    profsvcClaimDetail1,
    profsvcClaimDetail2,
    profsvcClaimDetail3,
];